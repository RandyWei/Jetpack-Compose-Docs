{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Jetpack Compose \u662f\u4ec0\u4e48\uff1f \u00b6 Cite Jetpack Compose \u662f\u7528\u4e8e\u6784\u5efa\u539f\u751f Android \u754c\u9762\u7684\u65b0\u5de5\u5177\u5305\u3002\u5b83\u53ef\u7b80\u5316\u5e76\u52a0\u5feb Android \u4e0a\u7684\u754c\u9762\u5f00\u53d1\uff0c\u4f7f\u7528\u66f4\u5c11\u7684\u4ee3\u7801\u3001\u5f3a\u5927\u7684\u5de5\u5177\u548c\u76f4\u89c2\u7684 Kotlin API\uff0c\u5feb\u901f\u8ba9\u5e94\u7528\u751f\u52a8\u800c\u7cbe\u5f69\u3002 Example \u524d\u7f6e\u6761\u4ef6 \u00b6 \u4f1a kotlin \u8bed\u8a00 \u6700\u597d\u4f1a Android App\u5f00\u53d1\u7ecf\u9a8c\uff0c\u81f3\u5c11\u5e94\u8be5\u6709\u79fb\u52a8 APP \u5f00\u53d1\u7ecf\u9a8c","title":"Jetpack Compose \u662f\u4ec0\u4e48\uff1f"},{"location":"#jetpack-compose","text":"Cite Jetpack Compose \u662f\u7528\u4e8e\u6784\u5efa\u539f\u751f Android \u754c\u9762\u7684\u65b0\u5de5\u5177\u5305\u3002\u5b83\u53ef\u7b80\u5316\u5e76\u52a0\u5feb Android \u4e0a\u7684\u754c\u9762\u5f00\u53d1\uff0c\u4f7f\u7528\u66f4\u5c11\u7684\u4ee3\u7801\u3001\u5f3a\u5927\u7684\u5de5\u5177\u548c\u76f4\u89c2\u7684 Kotlin API\uff0c\u5feb\u901f\u8ba9\u5e94\u7528\u751f\u52a8\u800c\u7cbe\u5f69\u3002 Example","title":"Jetpack Compose \u662f\u4ec0\u4e48\uff1f"},{"location":"#_1","text":"\u4f1a kotlin \u8bed\u8a00 \u6700\u597d\u4f1a Android App\u5f00\u53d1\u7ecf\u9a8c\uff0c\u81f3\u5c11\u5e94\u8be5\u6709\u79fb\u52a8 APP \u5f00\u53d1\u7ecf\u9a8c","title":"\u524d\u7f6e\u6761\u4ef6"},{"location":"Animation/","text":"","title":"Animation"},{"location":"CompositionLocal/","text":"","title":"CompositionLocal"},{"location":"Lifecycle/","text":"","title":"\u751f\u547d\u5468\u671f"},{"location":"Modifiers/","text":"Modifiers \u53ef\u4ee5\u4fee\u9970\u4e00\u4e2a composable\u3002 \u5728\u524d\u9762\u57fa\u7840\u7ec4\u4ef6\u4e2d\uff0c\u53ef\u80fd\u6216\u591a\u6216\u5c11\u89c1\u8fc7 Modifier\uff0c\u4f46\u4e0d\u77e5\u9053\u5b83\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u90a3\u4e48\u8fd9\u4e00\u8282\u6211\u4eec\u6765\u770b\u770b Modifier \u5230\u5e95\u80fd\u505a\u54ea\u4e9b\u4e8b\u60c5\u5462\uff01 \u6539\u53d8 composable \u7684\u5c3a\u5bf8\u3001\u5e03\u5c40\u3001\u52a8\u4f5c\u548c\u5916\u89c2 \u6dfb\u52a0\u4fe1\u606f\uff0c\u6bd4\u5982\u65e0\u969c\u788d\u8f85\u52a9\u4fe1\u606f \u5904\u7406\u7528\u6237\u8f93\u5165 \u589e\u52a0\u9ad8\u7ea7\u4ea4\u4e92\uff0c\u6bd4\u5982\u70b9\u51fb\u3001\u6eda\u52a8\u3001\u62d6\u52a8\u6216\u7f29\u653e\u7b49\u7b49 @Composable fun TextSample () { Text ( text = \"Hello World!\" , modifier = Modifier . background ( Color . Red ) . padding ( 8. dp ), style = TextStyle ( background = Color . Green ) ) } \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u7ed9\u6587\u672c\u6dfb\u52a0\u4e86\u7eff\u8272\u80cc\u666f\uff0c\u7136\u540e\u901a\u8fc7 Modifier \u8bbe\u7f6e\u4e86\u4e24\u4e2a\u4fee\u9970 background \u8bbe\u7f6e\u63a7\u4ef6\u7684\u80cc\u666f\u989c\u8272 padding \u8bbe\u7f6e\u5185\u95f4\u8ddd modifiers \u7684\u5148\u540e\u987a\u5e8f \u00b6 \u4fee\u9970\u7684\u5148\u540e\u987a\u5e8f\u662f\u4f1a\u5f71\u54cd\u5230\u4fee\u9970\u6548\u679c\u7684\u3002\u6bd4\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u628a padding \u548c background \u7684\u987a\u5e8f\u8c03\u6362\u4e00\u4e0b\uff0c\u7ea2\u8272\u80cc\u666f\u5c06\u4e0d\u4f1a\u663e\u793a\u51fa\u6765\u3002 \u5185\u7f6e\u7684 Modifiers \u00b6 \u7cfb\u7edf\u5185\u7f6e\u4e86\u4e00\u4e9b modifiers \u4f9b\u7528\u6237\u4f7f\u7528 padding \u548c size \u901a\u5e38\u60c5\u51b5\u4e0b\u5e03\u5c40\u4f1a\u6839\u636e\u5176\u5185\u5bb9\u5927\u5c0f\u6765\u8fdb\u884c\u663e\u793a\u3002\u4f46\u662f\u4f60\u53ef\u4ee5\u901a\u8fc7 size \u6765\u63a7\u5236\u5e03\u5c40\u7684\u5927\u5c0f @Composable fun ArtistCard ( /*...*/ ) { Row ( modifier = Modifier . size ( width = 400. dp , height = 100. dp ) ) { Image ( /*...*/ ) Column { /*...*/ } } } Warning \u5982\u679c\u6307\u5b9a\u7684\u5927\u5c0f\u4e0d\u6ee1\u8db3\u7236\u5e03\u5c40\u7684\u7ea6\u675f\uff0c\u5219\u5c3a\u5bf8\u5c06\u4f1a\u65e0\u6548\u3002\u5982\u679c\u5f3a\u5236\u8bbe\u7f6e\u8bf7\u4f7f\u7528\u800c\u4e0d\u8003\u8651\u7236\u63a7\u4ef6\u7ea6\u675f\uff0c\u53ef\u4ee5\u4f7f\u7528 requiredSize @Composable fun ImageSample () { Column { //\u7236\u63a7\u4ef6\u8bbe\u7f6e\u5c3a\u5bf8\u4e3a100dp Column ( modifier = Modifier . size ( 100. dp )) { Image ( painter = painterResource ( id = R . drawable . newbanner4 ), contentDescription = null , modifier = Modifier . size ( 150. dp ), //\u6b64\u65f6\u5b50\u63a7\u4ef6\u4f7f\u7528 size \u8bbe\u7f6e150dp \u662f\u65e0\u6548\u7684 colorFilter = ColorFilter . tint ( Color . Red , blendMode = BlendMode . Color ) ) } //\u7236\u63a7\u4ef6\u8bbe\u7f6e\u5c3a\u5bf8\u4e3a100dp Column ( modifier = Modifier . size ( 100. dp )) { Image ( painter = painterResource ( id = R . drawable . newbanner4 ), contentDescription = null , modifier = Modifier . requiredSize ( 150. dp ), //\u6b64\u65f6\u5b50\u63a7\u4ef6\u9700\u8981\u4f7f\u7528 requiredSize \u8bbe\u7f6e\u4e3a150dp\u624d\u6709\u6548 colorFilter = ColorFilter . tint ( Color . Red , blendMode = BlendMode . Color ) ) } } } \u5982\u56fe\u6240\u793a\uff1a\u4e0a\u9762\u7684\u56fe\u7247\u662f\u7236\u5e03\u5c40\u63a7\u5236\u4e3a100dp\uff0c\u56fe\u7247\u8bbe\u7f6e150dp \u65e0\u6548\u3002\u4e0b\u9762\u7684\u56fe\u7247\u4f7f\u7528 requiredSize \u8bbe\u7f6e150dp \u540e\u5c31\u6709\u6548\u4e86\u3002 fillMaxWidth \u5982\u679c\u4f60\u60f3\u8ba9\u586b\u6ee1\u7236\u5e03\u5c40\uff0c\u53ef\u4ee5\u4f7f\u7528 fillMaxWidth \u548c fillMaxHeight \u6216\u76f4\u63a5\u4f7f\u7528 fillMaxSize offset \u5982\u679c\u60f3\u8981\u8bbe\u7f6e\u7ec4\u4ef6\u57fa\u4e8e\u73b0\u5728\u4f4d\u7f6e\u7684\u504f\u79fb\uff0c\u53ef\u4ee5\u901a\u8fc7 Modifier.offset()\u6765\u8bbe\u7f6e x \u548c y \u503c Modifier\u662f\u5b58\u5728\u8303\u56f4\u5b89\u5168 \u00b6 \u5728 Compose \u4e2d\uff0cmodifer \u662f\u5b58\u5728\u8303\u56f4\u7684\uff0c\u6709\u4e00\u4e9bmodifier \u53ea\u80fd\u5728\u7279\u5b9a\u7ec4\u4ef6\u4e2d\u624d\u80fd\u4f7f\u7528\u3002\u6bd4\u5982 matchParentSize \u53ea\u80fd\u5728 BoxScope \u4e2d\u4f7f\u7528\u3002 \u66f4\u591a \u00b6 \u5b98\u65b9 Modifiers \u4ecb\u7ecd Full list of modifiers","title":"Modifiers"},{"location":"Modifiers/#modifiers","text":"\u4fee\u9970\u7684\u5148\u540e\u987a\u5e8f\u662f\u4f1a\u5f71\u54cd\u5230\u4fee\u9970\u6548\u679c\u7684\u3002\u6bd4\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u628a padding \u548c background \u7684\u987a\u5e8f\u8c03\u6362\u4e00\u4e0b\uff0c\u7ea2\u8272\u80cc\u666f\u5c06\u4e0d\u4f1a\u663e\u793a\u51fa\u6765\u3002","title":"modifiers \u7684\u5148\u540e\u987a\u5e8f"},{"location":"Modifiers/#modifiers_1","text":"\u7cfb\u7edf\u5185\u7f6e\u4e86\u4e00\u4e9b modifiers \u4f9b\u7528\u6237\u4f7f\u7528 padding \u548c size \u901a\u5e38\u60c5\u51b5\u4e0b\u5e03\u5c40\u4f1a\u6839\u636e\u5176\u5185\u5bb9\u5927\u5c0f\u6765\u8fdb\u884c\u663e\u793a\u3002\u4f46\u662f\u4f60\u53ef\u4ee5\u901a\u8fc7 size \u6765\u63a7\u5236\u5e03\u5c40\u7684\u5927\u5c0f @Composable fun ArtistCard ( /*...*/ ) { Row ( modifier = Modifier . size ( width = 400. dp , height = 100. dp ) ) { Image ( /*...*/ ) Column { /*...*/ } } } Warning \u5982\u679c\u6307\u5b9a\u7684\u5927\u5c0f\u4e0d\u6ee1\u8db3\u7236\u5e03\u5c40\u7684\u7ea6\u675f\uff0c\u5219\u5c3a\u5bf8\u5c06\u4f1a\u65e0\u6548\u3002\u5982\u679c\u5f3a\u5236\u8bbe\u7f6e\u8bf7\u4f7f\u7528\u800c\u4e0d\u8003\u8651\u7236\u63a7\u4ef6\u7ea6\u675f\uff0c\u53ef\u4ee5\u4f7f\u7528 requiredSize @Composable fun ImageSample () { Column { //\u7236\u63a7\u4ef6\u8bbe\u7f6e\u5c3a\u5bf8\u4e3a100dp Column ( modifier = Modifier . size ( 100. dp )) { Image ( painter = painterResource ( id = R . drawable . newbanner4 ), contentDescription = null , modifier = Modifier . size ( 150. dp ), //\u6b64\u65f6\u5b50\u63a7\u4ef6\u4f7f\u7528 size \u8bbe\u7f6e150dp \u662f\u65e0\u6548\u7684 colorFilter = ColorFilter . tint ( Color . Red , blendMode = BlendMode . Color ) ) } //\u7236\u63a7\u4ef6\u8bbe\u7f6e\u5c3a\u5bf8\u4e3a100dp Column ( modifier = Modifier . size ( 100. dp )) { Image ( painter = painterResource ( id = R . drawable . newbanner4 ), contentDescription = null , modifier = Modifier . requiredSize ( 150. dp ), //\u6b64\u65f6\u5b50\u63a7\u4ef6\u9700\u8981\u4f7f\u7528 requiredSize \u8bbe\u7f6e\u4e3a150dp\u624d\u6709\u6548 colorFilter = ColorFilter . tint ( Color . Red , blendMode = BlendMode . Color ) ) } } } \u5982\u56fe\u6240\u793a\uff1a\u4e0a\u9762\u7684\u56fe\u7247\u662f\u7236\u5e03\u5c40\u63a7\u5236\u4e3a100dp\uff0c\u56fe\u7247\u8bbe\u7f6e150dp \u65e0\u6548\u3002\u4e0b\u9762\u7684\u56fe\u7247\u4f7f\u7528 requiredSize \u8bbe\u7f6e150dp \u540e\u5c31\u6709\u6548\u4e86\u3002 fillMaxWidth \u5982\u679c\u4f60\u60f3\u8ba9\u586b\u6ee1\u7236\u5e03\u5c40\uff0c\u53ef\u4ee5\u4f7f\u7528 fillMaxWidth \u548c fillMaxHeight \u6216\u76f4\u63a5\u4f7f\u7528 fillMaxSize offset \u5982\u679c\u60f3\u8981\u8bbe\u7f6e\u7ec4\u4ef6\u57fa\u4e8e\u73b0\u5728\u4f4d\u7f6e\u7684\u504f\u79fb\uff0c\u53ef\u4ee5\u901a\u8fc7 Modifier.offset()\u6765\u8bbe\u7f6e x \u548c y \u503c","title":"\u5185\u7f6e\u7684 Modifiers"},{"location":"Modifiers/#modifier","text":"\u5728 Compose \u4e2d\uff0cmodifer \u662f\u5b58\u5728\u8303\u56f4\u7684\uff0c\u6709\u4e00\u4e9bmodifier \u53ea\u80fd\u5728\u7279\u5b9a\u7ec4\u4ef6\u4e2d\u624d\u80fd\u4f7f\u7528\u3002\u6bd4\u5982 matchParentSize \u53ea\u80fd\u5728 BoxScope \u4e2d\u4f7f\u7528\u3002","title":"Modifier\u662f\u5b58\u5728\u8303\u56f4\u5b89\u5168"},{"location":"Modifiers/#_1","text":"\u5b98\u65b9 Modifiers \u4ecb\u7ecd Full list of modifiers","title":"\u66f4\u591a"},{"location":"State/","text":"\u5e94\u7528\u4e2d\u7684\u72b6\u6001\u662f\u6307\u53ef\u4ee5\u968f\u65f6\u95f4\u53d8\u5316\u7684\u4efb\u4f55\u503c\u3002\u8fd9\u4e2a\u5b9a\u4e49\u5f88\u5e7f\u6cdb\u5305\u62ec\u6570\u636e\u5e93\u6216\u7c7b\u4e2d\u53d8\u91cf\u7684\u6240\u6709\u5185\u5bb9\u3002 \u5f53\u7f51\u901f\u4e0d\u901a\u7545\u65f6\u9700\u8981\u663e\u793a\u4e00\u4e2a Snackbar \u7ed9\u7528\u6237 \u535a\u6587\u548c\u76f8\u5173\u8bc4\u8bba\u53d1\u751f\u53d8\u5316\u65f6 \u7528\u6237\u70b9\u51fb\u6309\u94ae\u53d1\u751f\u7684\u52a8\u753b Jetpack Compose \u53ef\u5e2e\u52a9\u60a8\u660e\u786e\u72b6\u6001\u5728 Android \u5e94\u7528\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\u548c\u4f7f\u7528\u65b9\u5f0f\u3002\u672c\u6307\u5357\u91cd\u70b9\u4ecb\u7ecd\u72b6\u6001\u4e0e\u53ef\u7ec4\u5408\u9879\u4e4b\u95f4\u7684\u5173\u8054\uff0c\u4ee5\u53ca Jetpack Compose \u63d0\u4f9b\u7684 API\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b API \u66f4\u8f7b\u677e\u5730\u5904\u7406\u72b6\u6001\u3002 \u72b6\u6001\u548ccomposition \u00b6 \u7531\u4e8eCompose \u662f\u58f0\u660e\u5f0f\u7684\uff0c\u6240\u4ee5\u5f53\u9700\u8981\u6539\u53d8\u5176\u4efb\u4f55\u5185\u5bb9\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u8bbe\u7f6e\u65b0\u7684\u53c2\u6570\u8c03\u7528\u540c\u4e00\u7ec4\u58f0\u660e\uff0c\u8fd9\u4e9b\u53c2\u6570\u5c31\u662f UI \u7684\u8868\u73b0\u5f62\u5f0f\u3002\u6bcfState \u66f4\u65b0\u65f6\uff0c\u90fd\u4f1a\u53d1\u751f\u91cd\u7ec4\u3002 composable \u4e2d\u7684\u72b6\u6001 \u00b6 Composable\u4e2d\u53ef\u4ee5\u4f7f\u7528 remember \u6765\u8bb0\u4f4f\u5355\u4e2a\u5bf9\u8c61\u3002\u7cfb\u7edf\u4f1a\u5728\u521d\u59cb\u5316\u7531 remember \u8ba1\u7b97\u7684\u503c\u5b58\u50a8\u5728Composable\u4e2d\uff0c\u5e76\u5728\u91cd\u7ec4\u7684\u65f6\u5019\u8fd4\u56de\u5b58\u50a8\u7684\u503c\u3002 remember \u65e2\u53ef\u4ee5\u5b58\u50a8\u53ef\u53d8\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u5b58\u50a8\u4e0d\u53ef\u53d8\u5bf9\u8c61\u3002 Tip remember \u4f1a\u5c06\u5bf9\u8c61\u5b58\u50a8\u5728Composable \u4e2d\uff0c\u5f53\u8c03\u7528 remember \u7684Composable\u88ab\u79fb\u9664\u540e\uff0c\u5b58\u50a8\u7684\u503c\u4e5f\u968f\u4e4b\u6d88\u5931\u3002 mutableStateOf \u4f1a\u521b\u5efa\u53ef\u89c2\u5bdf\u7684 MutableState<T> \uff0c\u540e\u8005\u662f Compose \u8fd0\u884c\u65f6\u53ef\u89c2\u5bdf\u7c7b\u578b\u3002 interface MutableState < T > : State < T > { override var value : T } value \u6709\u4efb\u4f55\u66f4\u6539\uff0c\u7cfb\u7edf\u4f1a\u5b89\u6392\u91cd\u7ec4\uff0c\u8bfb\u53d6value \u7684\u6240\u6709Composable \u51fd\u6570\u3002 \u5728Composable\u4e2d\u58f0\u660e MutableState \u5bf9\u8c61\u6709\u4e09\u79cd\u65b9\u6cd5\uff1a val mutableState = remember { mutableStateOf(default) } var value by remember { mutableStateOf(default) } val (value, setValue) = remember { mutableStateOf(default) } \u8fd9\u4e09\u79cd\u65b9\u6cd5\u662f\u7b49\u6548\u7684\uff0c\u4ee5\u8bed\u6cd5\u7cd6\u7684\u5f62\u5f0f\u63d0\u4f9b\u4e0d\u540c\u7684\u7528\u6cd5\u3002\u4f7f\u7528 by \u8bed\u6cd5\u9700\u8981\u5bfc\u5165\uff1a import androidx.compose.runtime.getValue import androidx.compose.runtime.setValue \u4f60\u53ef\u4ee5\u5c06\u72b6\u6001\u503c\u4f5c\u4e3a Composable \u7684\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u7528\u4f5c\u903b\u8f91\u8bed\u53e5\u4e2d\u7684\u5224\u65ad\u6761\u4ef6\u3002 @Composable fun HelloContent () { Column ( modifier = Modifier . padding ( 16. dp )) { var name by remember { mutableStateOf ( \"\" ) } if ( name . isNotEmpty ()) { Text ( text = \"Hello, $ name !\" , modifier = Modifier . padding ( bottom = 8. dp ), style = MaterialTheme . typography . h5 ) } OutlinedTextField ( value = name , onValueChange = { name = it }, label = { Text ( \"Name\" ) } ) } } Warning \u867d\u7136 remember \u53ef\u4ee5\u5728\u91cd\u7ec4\u540e\u4fdd\u6301\u72b6\u6001\uff0c\u4f46\u5982\u679c\u662f\u5e94\u7528\u7684\u914d\u7f6e\u66f4\u65b0\u4e86\uff0c\u6bd4\u5982\u5c4f\u5e55\u65cb\u8f6c\uff0c\u8fd9\u65f6\u5019\u8fd9\u4e2a\u72b6\u6001\u4e5f\u4f1a\u91cd\u7f6e\u3002\u56e0\u6b64\uff0c\u5fc5\u987b\u4f7f\u7528 rememberSaveable \u3002 rememberSaveable \u4f1a\u81ea\u52a8\u4fdd\u5b58\u53ef\u4fdd\u5b58\u7684 Bundle \u4e2d\u7684\u503c\u3002\u5bf9\u4e8e\u5176\u4ed6\u503c\uff0c\u53ef\u4ee5\u5c06\u5176\u4f20\u5165\u81ea\u5b9a\u4e49 Saver \u5bf9\u8c61\u3002 \u5176\u4ed6\u53ef\u89c2\u5bdf\u5bf9\u8c61 \u00b6 Jetpack Compose \u4e0d\u5f3a\u5236\u4f7f\u7528 MutableState \u5b58\u50a8\u72b6\u6001\uff0c\u4e5f\u652f\u6301\u5176\u4ed6\u53ef\u89c2\u5bdf\u7c7b\u578b\u3002\u4f46\u5728 Jetpack Compose \u4e2d\u8bfb\u53d6\u5176\u4ed6\u53ef\u89c2\u5bdf\u7c7b\u578b\u4e4b\u524d\uff0c\u5fc5\u987b\u5c06\u5176\u8f6c\u4e3a State \uff0c\u4ee5\u4fbf Jetpack Compose \u53ef\u4ee5\u5728\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\u81ea\u52a8\u91cd\u7ec4\u754c\u9762\u3002 \u5176\u4ed6\u53ef\u7528\u7684\u53ef\u89c2\u5bdf\u7c7b\u578b\uff1a LiveData Flow RxJava2 Tip Compose \u662f\u901a\u8fc7\u8bfb\u53d6State \u5bf9\u8c61\u81ea\u52a8\u91cd\u7ec4\u754c\u9762\u7684\u3002 \u5982\u679c\u5728 Compose \u4e2d\u4f7f\u7528 LiveData \u7b49\u5176\u4ed6\u53ef\u89c2\u5bdf\u7c7b\u578b\uff0c\u5e94\u8be5\u5148\u5c06\u5176\u8f6c\u6362\u4e3a State \u7136\u540e\u518d\u4f7f\u7528\u3002\u6bd4\u5982 LiveData<T>.observeAsState() \u3002 Warning \u5728 Compose \u4e2d\u5c06\u53ef\u53d8\u5bf9\u8c61\uff0c\u5982 ArrayList \u6216 mutableListOf()\u7b49\u7528\u4f5c\u72b6\u6001\uff0c\u53ef\u4ee5\u9020\u6210\u754c\u9762\u65e0\u6cd5\u66f4\u65b0\uff0c\u7528\u6237\u770b\u5230\u7684\u6c38\u8fdc\u662f\u65e7\u7684\u6570\u636e\u3002\u5efa\u8bae\u4f7f\u7528\u53ef\u89c2\u5bdf\u7684\u6570\u636e\u5b58\u50a8\u5668\uff0c\u5982 State >\u548c\u4e0d\u53ef\u53d8\u7684 listOf()\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4e0d\u53ef\u89c2\u5bdf\u7684\u53ef\u53d8\u5bf9\u8c61\u3002 \u72b6\u6001\u63d0\u5347 \u00b6 \u4f7f\u7528 remember \u5b58\u50a8\u5bf9\u8c61\u7684 Composable \u4e2d\u521b\u5efa\u5185\u90e8\u72b6\u6001\uff0c\u4f7f\u8be5Composable\u6709\u4e86\u72b6\u6001\uff0c\u4f1a\u5728\u5176\u5185\u90e8\u4fdd\u6301\u548c\u4fee\u6539\u81ea\u5df1\u7684\u72b6\u6001\u3002\u5728\u8c03\u7528\u8005\u4e0d\u9700\u8981\u63a7\u5236\u548c\u7ba1\u7406\u72b6\u6001\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e48\u64cd\u4f5c\u662f\u53ef\u4ee5\u7684\u3002\u4f46\u662f\u4e00\u822c\u8fd9\u79cdComposable\u4e0d\u80fd\u590d\u7528\uff0c\u4e5f\u4e0d\u597d\u6d4b\u8bd5\u3002 \u56e0\u6b64\u5982\u679c\u5728\u7f16\u5199\u7684\u7ec4\u4ef6\u8003\u8651\u590d\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u5c06\u72b6\u6001\u79fb\u5230 Composable \u7ec4\u4ef6\u7684\u8c03\u7528\u8005\uff0c\u4fdd\u8bc1Composable\u672c\u8eab\u662f\u65e0\u72b6\u6001\u7684\uff0c\u8fd9\u79cd\u64cd\u4f5c\u53eb\u505a\u72b6\u6001\u63d0\u5347\u3002 Jetpack Compose \u4e2d\u4e00\u822c\u7684\u72b6\u6001\u63d0\u5347\u6a21\u5f0f\u662f\u5c06\u72b6\u6001\u53d8\u91cf\u66ff\u6362\u4e3a\u4e24\u4e2a\u53c2\u6570\uff1a value:T \uff1a\u8981\u663e\u793a\u7684\u5f53\u524d\u503c onValueChange:(T) -> Unit \uff1a\u8bf7\u6c42\u66f4\u6539\u503c\u7684\u4e8b\u4ef6\uff0c\u5176\u4e2d T \u662f\u5efa\u8bae\u7684\u65b0\u503c \u5176\u5b9e\uff0c\u5e76\u4e0d\u4e00\u5b9a\u5b9a\u4e49\u4e3a onValueChange \uff0c\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u64cd\u4f5c\u6765\u5b9a\u4e49\u66f4\u6709\u610f\u4e49\u7684\u540d\u79f0\u3002\u6bd4\u5982 onExpand \u548c onCollapse\u3002 \u4ee5\u8fd9\u79cd\u65b9\u5f0f\u63d0\u5347\u7684\u72b6\u6001\u5177\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u5c5e\u6027\uff1a \u5355\u4e00\u53ef\u4fe1\u6765\u6e90\uff1a\u901a\u8fc7\u79fb\u52a8\u72b6\u6001\u800c\u4e0d\u662f\u590d\u5236\u72b6\u6001\uff0c\u6765\u786e\u4fdd\u53ea\u6709\u4e00\u4e2a\u53ef\u4fe1\u7684\u6570\u636e\u6765\u6e90\uff0c\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b bug \u5c01\u88c5\uff1a\u53ea\u6709\u6709\u72b6\u6001\u7684Composable\u80fd\u591f\u4fee\u6539\u5176\u72b6\u6001 \u53ef\u5171\u4eab\uff1a\u53ef\u4e0e\u591a\u4e2aComposable\u5171\u4eab\u63d0\u5347\u7684\u72b6\u6001 \u53ef\u62e6\u622a\uff1a\u65e0\u72b6\u6001Composable\u7684\u8c03\u7528\u8005\u53ef\u4ee5\u5728\u66f4\u6539\u72b6\u6001\u524d\u51b3\u5b9a\u5ffd\u7565\u6216\u4fee\u6539\u4e8b\u4ef6 \u89e3\u8026\uff1a\u65e0\u72b6\u6001Composable\u7684\u72b6\u6001\u53ef\u4ee5\u5b58\u50a8\u5728\u4efb\u4f55\u4f4d\u7f6e \u5728\u672c\u793a\u4f8b\u4e2d\uff0c\u60a8\u4ece HelloContent \u4e2d\u63d0\u53d6 name \u548c onValueChange\uff0c\u5e76\u6309\u7167\u53ef\u7ec4\u5408\u9879\u7684\u6811\u7ed3\u6784\u5c06\u5b83\u4eec\u79fb\u81f3\u53ef\u8c03\u7528 HelloContent \u7684 HelloScreen \u4e2d\u3002 @Composable fun HelloScreen () { var name by rememberSaveable { mutableStateOf ( \"\" ) } HelloContent ( name = name , onNameChange = { name = it }) } @Composable fun HelloContent ( name : String , onNameChange : ( String ) -> Unit ) { Column ( modifier = Modifier . padding ( 16. dp )) { Text ( text = \"Hello, $ name \" , modifier = Modifier . padding ( bottom = 8. dp ), style = MaterialTheme . typography . h5 ) OutlinedTextField ( value = name , onValueChange = onNameChange , label = { Text ( \"Name\" ) } ) } } \u901a\u8fc7\u4ece HelloContent \u4e2d\u63d0\u5347\u51fa\u72b6\u6001\uff0c\u66f4\u5bb9\u6613\u63a8\u65ad\u8be5Composable\u5728\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u91cd\u590d\u4f7f\u7528\u5b83\uff0c\u4ee5\u53ca\u8fdb\u884c\u6d4b\u8bd5\u3002HelloContent \u4e0e\u72b6\u6001\u7684\u5b58\u50a8\u65b9\u5f0f\u89e3\u8026\u3002\u89e3\u8026\u610f\u5473\u7740\uff0c\u5982\u679c\u60a8\u4fee\u6539\u6216\u66ff\u6362 HelloScreen\uff0c\u4e0d\u5fc5\u66f4\u6539 HelloContent \u7684\u5b9e\u73b0\u65b9\u5f0f\u3002 \u72b6\u6001\u4e0b\u964d\u3001\u4e8b\u4ef6\u4e0a\u5347\u7684\u8fd9\u79cd\u6a21\u5f0f\u79f0\u4e3a\u201c\u5355\u5411\u6570\u636e\u6d41\u201d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u72b6\u6001\u4f1a\u4ece HelloScreen \u4e0b\u964d\u4e3a HelloContent\uff0c\u4e8b\u4ef6\u4f1a\u4ece HelloContent \u4e0a\u5347\u4e3a HelloScreen\u3002\u901a\u8fc7\u9075\u5faa\u5355\u5411\u6570\u636e\u6d41\uff0c\u60a8\u53ef\u4ee5\u5c06\u5728\u754c\u9762\u4e2d\u663e\u793a\u72b6\u6001\u7684\u53ef\u7ec4\u5408\u9879\u4e0e\u5e94\u7528\u4e2d\u5b58\u50a8\u548c\u66f4\u6539\u72b6\u6001\u7684\u90e8\u5206\u89e3\u8026\u3002 Note When hoisting state, there are three rules to help you figure out where state should go: State should be hoisted to at least the lowest common parent of all composables that use the state (read). If two states change in response to the same events they should be hoisted together. State should be hoisted to at least the highest level it may be changed (write). \u63d0\u5347\u72b6\u6001\u65f6\uff0c\u6709\u4e09\u6761\u89c4\u5219\uff1a \u72b6\u6001\u5e94\u81f3\u5c11\u63d0\u5347\u5230\u4f7f\u7528\u8be5\u72b6\u6001(\u8bfb\u53d6)\u7684\u6240\u6709Composable\u7684\u6700\u4f4e\u5171\u540c\u7236\u9879 \u72b6\u6001\u5e94\u81f3\u5c11\u63d0\u5347\u5230\u5b83\u53ef\u4ee5\u53d1\u751f\u53d8\u5316(\u5199\u5165)\u7684\u6700\u9ad8\u7ea7\u522b \u5982\u679c\u4e24\u79cd\u72b6\u6001\u53d1\u751f\u53d8\u5316\u4ee5\u54cd\u5e94\u76f8\u540c\u7684\u4e8b\u4ef6\uff0c\u5b83\u4eec\u5e94\u8be5\u4e00\u76f4\u63d0\u5347\u3002 \u6062\u590d\u72b6\u6001 \u00b6 \u5728\u91cd\u65b0\u521b\u5efa Activity \u6216\u8fdb\u7a0b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 rememberSaverable \u6062\u590d\u754c\u9762\u72b6\u6001\u3002 \u5b58\u50a8\u65b9\u5f0f \u00b6 \u6dfb\u52a0\u5230 Bundle \u7684\u6240\u6709\u6570\u636e\u7c7b\u578b\u90fd\u4f1a\u81ea\u52a8\u4fdd\u5b58\u3002\u5982\u679c\u8981\u4fdd\u5b58\u65e0\u6cd5\u6dfb\u52a0\u5230 Bundle \u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f Parcelize \u00b6 \u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5411\u5bf9\u8c61\u6dfb\u52a0@Parcelize \u6ce8\u89e3\u3002 @Parcelize data class City ( val name : String , val country : String ) : Parcelable @Composable fun CityScreen () { var selectedCity = rememberSaveable { mutableStateOf ( City ( \"Madrid\" , \"Spain\" )) } } MapSaver \u00b6 \u5982\u679c\u67d0\u79cd\u539f\u56e0\u5bfc\u81f4 @Parcelize \u4e0d\u5408\u9002\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 mapSaver \u5b9a\u4e49\u81ea\u5df1\u7684\u89c4\u5219\uff0c\u89c4\u5b9a\u5982\u4f55\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u7cfb\u7edf\u53ef\u4fdd\u5b58\u5230 Bundle \u7684\u4e00\u7ec4\u503c\u3002 data class City ( val name : String , val country : String ) val CitySaver = run { val nameKey = \"Name\" val countryKey = \"Country\" mapSaver ( save = { mapOf ( nameKey to it . name , countryKey to it . country ) }, restore = { City ( it [ nameKey ] as String , it [ countryKey ] as String ) } ) } @Composable fun CityScreen () { var selectedCity = rememberSaveable ( stateSaver = CitySaver ) { mutableStateOf ( City ( \"Madrid\" , \"Spain\" )) } } ListSaver \u00b6 \u4e3a\u4e86\u907f\u514d\u9700\u8981\u4e3a\u6620\u5c04\u5b9a\u4e49\u952e\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 listSaver \u5e76\u5c06\u5176\u7d22\u5f15\u7528\u4f5c\u952e\uff1a data class City ( val name : String , val country : String ) val CitySaver = listSaver < City , Any > ( save = { listOf ( it . name , it . country ) }, restore = { City ( it [ 0 ] as String , it [ 1 ] as String ) } ) @Composable fun CityScreen () { var selectedCity = rememberSaveable ( stateSaver = CitySaver ) { mutableStateOf ( City ( \"Madrid\" , \"Spain\" )) } } \u7ba1\u7406\u72b6\u6001 \u00b6 \u5728\u524d\u9762\u8bf4\u5230\u7684\u72b6\u6001\u63d0\u5347\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u628a\u72b6\u6001\u8fdb\u884c\u4e00\u5b9a\u7684\u7edf\u4e00\u7ba1\u7406\u3002\u4f46\u662f\u5982\u679c\u968f\u7740\u9879\u76ee\u529f\u80fd\u7684\u4e30\u5bcc\uff0c\u9700\u8981\u8ddf\u8e2a\u7684\u72b6\u6001\u6570\u91cf\u4e5f\u968f\u4e4b\u589e\u52a0\u6216\u8005Composable\u4e2d\u9700\u8981\u6267\u884c\u4e1a\u52a1\u903b\u8f91\u65f6\uff0c\u6700\u597d\u5c06\u903b\u8f91\u548c\u72b6\u6001\u4e8b\u52a1\u59d4\u6d3e\u7ed9\u5176\u4ed6\u7c7b\uff08\u72b6\u6001\u5bb9\u5668\uff09 \u4e0b\u9762\u5c06\u4ecb\u7ecd\u5982\u4f55\u5728 Compose \u4e2d\u4ee5\u4e0d\u540c\u65b9\u5f0f\u7ba1\u7406\u72b6\u6001\u3002\u6839\u636eComposable\u7684\u590d\u6742\u6027\uff0c\u9700\u8981\u8003\u8651\u4e0d\u540c\u7684\u65b9\u6848\uff1a Composables\uff1a\u7528\u4e8e\u7ba1\u7406\u7b80\u5355\u7684\u754c\u9762\u5143\u7d20\u72b6\u6001 \u72b6\u6001\u5bb9\u5668\uff1a\u7528\u4e8e\u7ba1\u7406\u590d\u6742\u7684\u754c\u9762\u5143\u7d20\u72b6\u6001\u4e14\u62e5\u6709\u754c\u9762\u903b\u8f91 ViewModel\uff1a\u63d0\u4f9b\u5bf9\u4e8e\u4e1a\u52a1\u903b\u8f91\u548c UI \u72b6\u6001\u7684\u72b6\u6001\u5bb9\u5668 \u72b6\u6001\u5bb9\u5668\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u6240\u7ba1\u7406\u7684\u754c\u9762\u5143\u7d20\u7684\u8303\u56f4\uff0c\u6709\u65f6\u5019\u751a\u81f3\u9700\u8981\u5c06\u67d0\u4e2a\u72b6\u6001\u5bb9\u5668\u96c6\u6210\u5230\u5176\u4ed6\u72b6\u6001\u5bb9\u5668\u4e2d\u3002 \u4e0b\u56fe\u6240\u793a\u4e3a Compose \u72b6\u6001\u7ba1\u7406\u6240\u6d89\u53ca\u7684\u5404\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u6982\u89c8\u3002 Composable\u53ef\u4ee5\u4fe1\u8d56\u4e8e0\u4e2a\u6216\u591a\u4e2a\u72b6\u6001\u5bb9\u5668\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u5176\u590d\u6742\u6027 \u5982\u679c\u9700\u8981\u8bbf\u95ee\u4e1a\u52a1\u903b\u8f91\u6216UI \u72b6\u6001\uff0c\u5219\u53ef\u80fd\u9700\u8981\u4fe1\u8d56\u4e8e ViewModel ViewModel \u4fe1\u8d56\u4e8e\u4e1a\u52a1\u5c42\u6216\u6570\u636e\u5c42 \u4e0d\u540c\u7c7b\u578b\u7684\u72b6\u6001\u548c\u903b\u8f91 \u00b6 \u5728 Android \u5e94\u7528\u4e2d\uff0c\u9700\u8981\u8003\u8651\u4e0d\u540c\u7c7b\u578b\u7684\u72b6\u6001\uff1a UI\u7ec4\u4ef6\u72b6\u6001\u662f\u7ec4\u4ef6\u7684\u63d0\u5347\u72b6\u6001\u3002\u4f8b\u5982 ScaffoldState \u7528\u4e8e\u5904\u7406 Scaffold \u7684\u72b6\u6001\u3002 \u754c\u9762 UI \u72b6\u6001\u662f\u754c\u9762\u4e0a\u9700\u8981\u663e\u793a\u7684\u5185\u5bb9\u3002\u6bd4\u5982\u4e00\u4e2a\u5546\u57ce APP \u4e0a\u7684\u8d2d\u7269\u8f66\u754c\u9762\u53ef\u80fd\u5305\u542b\u5546\u54c1\u4fe1\u606f\u3001\u5411\u7528\u6237\u663e\u793a\u7684\u6d88\u606f\u6216\u52a0\u8f7d\u6807\u8bb0\u3002\u8be5\u72b6\u6001\u901a\u5e38\u4f1a\u548c\u5176\u4ed6\u5c42\u76f8\u5173\u8054\u3002 \u6b64\u5916\uff0c\u903b\u8f91\u4e5f\u6709\u4e0d\u540c\u7684\u7c7b\u578b\uff1a \u754c\u9762\u64cd\u4f5c\u903b\u8f91\u548c UI \u903b\u8f91\uff1a\u5982\u4f55\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5bfc\u822a\u903b\u8f91\u51b3\u5b9a\u663e\u793a\u54ea\u4e2a\u754c\u9762\u3002 \u4e1a\u52a1\u903b\u8f91\u51b3\u5b9a\u5982\u4f55\u5904\u7406\u72b6\u6001\u53d8\u5316\uff0c\u901a\u5e38\u4f4d\u4e8e\u4e1a\u52a1\u5c42\u6216\u6570\u636e\u5c42\uff0c\u800c\u4e0d\u5e94\u8be5\u653e\u5728 UI \u5c42 Composables \u4f5c\u4e3a\u53ef\u4fe1\u6765\u6e90 \u00b6 \u5982\u679c\u72b6\u6001\u6570\u91cf\u8f83\u5c11\u548c\u903b\u8f91\u6bd4\u8f83\u7b80\u5355\uff0c\u5728Composable\u4e2d\u76f4\u63a5\u589e\u52a0\u903b\u8f91\u548c\u72b6\u6001\u662f\u53ef\u4ee5\u7684\uff0c\u4e0e\u5176\u76f8\u5173\u7684\u4ea4\u4e92\u90fd\u5e94\u8be5\u5728\u8fd9\u4e2aComposable\u8fdb\u884c\u3002\u4f46\u662f\u5982\u679c\u5c06\u5b83\u4f20\u9012\u7ed9\u5176\u4ed6Composable\uff0c\u8fd9\u5c31\u4e0d\u7b26\u5408\u5355\u4e00\u53ef\u4fe1\u6765\u6e90\u539f\u5219\uff0c\u800c\u4e14\u4f1a\u4f7f\u8c03\u8bd5\u66f4\u591a\u56f0\u96be\u3002 @Composable fun MyApp () { MyTheme { val scaffoldState = rememberScaffoldState () val coroutineScope = rememberCoroutineScope () Scaffold ( scaffoldState = scaffoldState ) { MyContent ( showSnackbar = { message -> coroutineScope . launch { scaffoldState . snackbarHostState . showSnackbar ( message ) } } ) } } } \u72b6\u6001\u5bb9\u5668\u4f5c\u4e3a\u53ef\u4fe1\u6765\u6e90 \u00b6 \u5f53Composable\u6d89\u53ca\u591a\u4e2a\u754c\u9762\u7684\u72b6\u6001\u7b49\u590d\u6742\u903b\u8f91\u65f6\uff0c\u5e94\u5c06\u76f8\u5e94\u4e8b\u52a1\u59d4\u6d3e\u7ed9\u72b6\u6001\u5bb9\u5668\u3002\u8fd9\u6837\u66f4\u6613\u4e8e\u5355\u72ec\u5bf9\u8be5\u903b\u8f91\u8fdb\u884c\u6d4b\u8bd5\uff0c\u8fd8\u964d\u4f4e\u4e86Composable\u7684\u590d\u6742\u6027\u3002\u4fdd\u8bc1Composable\u53ea\u662f\u8d1f\u8d23\u5c55\u793a\uff0c\u800c\u72b6\u6001\u5bb9\u5668\u8d1f\u8d23\u903b\u8f91\u548c\u72b6\u6001 \u5728\u4e0a\u9762 MyApp \u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u589e\u52a0\u66f4\u591a\u7684\u903b\u8f91\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2aMyAppState\u72b6\u6001\u5bb9\u5668\u6765\u7ba1\u7406 // Plain class that manages App's UI logic and UI elements' state class MyAppState ( val scaffoldState : ScaffoldState , val navController : NavHostController , private val resources : Resources , /* ... */ ) { val bottomBarTabs = /* State */ // Logic to decide when to show the bottom bar val shouldShowBottomBar : Boolean get () = /* ... */ // Navigation logic, which is a type of UI logic fun navigateToBottomBarRoute ( route : String ) { /* ... */ } // Show snackbar using Resources fun showSnackbar ( message : String ) { /* ... */ } } @Composable fun rememberMyAppState ( scaffoldState : ScaffoldState = rememberScaffoldState (), navController : NavHostController = rememberNavController (), resources : Resources = LocalContext . current . resources , /* ... */ ) = remember ( scaffoldState , navController , resources , /* ... */ ) { MyAppState ( scaffoldState , navController , resources , /* ... */ ) } \u56e0\u4e3a\u5728\u4f7f\u7528MyAppState \u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528 remember \u6765\u8fdb\u884c\u4fe1\u8d56\uff0c\u6240\u4ee5\u901a\u5e38\u60c5\u51b5\u4e0b\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a rememberMyAppState \u65b9\u6cd5\u6765\u76f4\u63a5\u8fd4\u56deMyAppState\u5b9e\u4f8b\u3002 \u90a3\u4e48\u73b0\u5728 MyApp \u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u53d8\u5f97\u5f88\u7b80\u5355\u4e86 @Composable fun MyApp () { MyTheme { val myAppState = rememberMyAppState () Scaffold ( scaffoldState = myAppState . scaffoldState , bottomBar = { if ( myAppState . shouldShowBottomBar ) { BottomBar ( tabs = myAppState . bottomBarTabs , navigateToRoute = { myAppState . navigateToBottomBarRoute ( it ) } ) } } ) { NavHost ( navController = myAppState . navController , \"initial\" ) { /* ... */ } } } } ViewModel \u4f5c\u4e3a\u53ef\u4fe1\u6765\u6e90 \u00b6 ViewModel \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u72b6\u6001\u5bb9\u5668\uff0c\u4e3b\u8981\u8d1f\u8d23\uff1a \u5bf9\u5e94\u7528\u7684\u4e1a\u52a1\u903b\u8f91\u6216\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u4e2a\u903b\u8f91\u901a\u5e38\u662f\u5728\u4e1a\u52a1\u5c42\u6216\u6570\u636e\u5c42 \u5904\u7406\u5373\u5c06\u5728\u754c\u9762\u4e0a\u5c55\u793a\u7684\u5e94\u7528\u6570\u636e ViewModel \u7684\u751f\u547d\u5468\u671f\u5f80\u5f80\u662f\u6bd4\u8f83\u957f\u7684\uff0c\u539f\u56e0\u662f\u5b83\u4eec\u5728\u914d\u7f6e\u53d1\u751f\u53d8\u5316\u540e\u4ecd\u7136\u6709\u6548\u3002ViewModel \u53ef\u4ee5\u9075\u5faa Activity\u3001Fragment\u3001\u6216\u5bfc\u822a\uff08\u5982\u679c\u4f7f\u7528\u4e86 \u5bfc\u822a\u5e93 \uff09\u7684\u751f\u547d\u5468\u671f\u3002\u6b63\u56e0\u4e3a ViewModel \u7684\u751f\u547d\u5468\u671f\u8f83\u957f\uff0c\u56e0\u6b64\u4e0d\u5e94\u8be5\u957f\u671f\u6301\u6709\u548c Composable \u5bc6\u5207\u76f8\u5173\u7684\u4e00\u4e9b\u72b6\u6001\uff0c\u5426\u5219\uff0c\u53ef\u4ee5\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002 data class ExampleUiState ( dataToDisplayOnScreen : List < Example > = emptyList (), userMessages : List < Message > = emptyList (), loading : Boolean = false ) class ExampleViewModel ( private val repository : MyRepository , private val savedState : SavedStateHandle ) : ViewModel () { var uiState by mutableStateOf < ExampleUiState > (...) private set // Business logic fun somethingRelatedToBusinessLogic () { ... } } @Composable fun ExampleScreen ( viewModel : ExampleViewModel = viewModel ()) { val uiState = viewModel . uiState ... Button ( onClick = { viewModel . somethingRelatedToBusinessLogic () }) { Text ( \"Do something\" ) } } Tip \u5982\u679c ViewModel \u4e2d\u5305\u542b\u8981\u5728\u8fdb\u7a0b\u91cd\u5efa\u540e\u4fdd\u7559\u7684\u72b6\u6001\uff0c\u8bf7\u4f7f\u7528 SavedStateHandle \u3002 \u66f4\u591a \u00b6 https://developer.android.com/jetpack/compose/state","title":"\u72b6\u6001"},{"location":"State/#composition","text":"\u7531\u4e8eCompose \u662f\u58f0\u660e\u5f0f\u7684\uff0c\u6240\u4ee5\u5f53\u9700\u8981\u6539\u53d8\u5176\u4efb\u4f55\u5185\u5bb9\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u8bbe\u7f6e\u65b0\u7684\u53c2\u6570\u8c03\u7528\u540c\u4e00\u7ec4\u58f0\u660e\uff0c\u8fd9\u4e9b\u53c2\u6570\u5c31\u662f UI \u7684\u8868\u73b0\u5f62\u5f0f\u3002\u6bcfState \u66f4\u65b0\u65f6\uff0c\u90fd\u4f1a\u53d1\u751f\u91cd\u7ec4\u3002","title":"\u72b6\u6001\u548ccomposition"},{"location":"State/#composable","text":"Composable\u4e2d\u53ef\u4ee5\u4f7f\u7528 remember \u6765\u8bb0\u4f4f\u5355\u4e2a\u5bf9\u8c61\u3002\u7cfb\u7edf\u4f1a\u5728\u521d\u59cb\u5316\u7531 remember \u8ba1\u7b97\u7684\u503c\u5b58\u50a8\u5728Composable\u4e2d\uff0c\u5e76\u5728\u91cd\u7ec4\u7684\u65f6\u5019\u8fd4\u56de\u5b58\u50a8\u7684\u503c\u3002 remember \u65e2\u53ef\u4ee5\u5b58\u50a8\u53ef\u53d8\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u5b58\u50a8\u4e0d\u53ef\u53d8\u5bf9\u8c61\u3002 Tip remember \u4f1a\u5c06\u5bf9\u8c61\u5b58\u50a8\u5728Composable \u4e2d\uff0c\u5f53\u8c03\u7528 remember \u7684Composable\u88ab\u79fb\u9664\u540e\uff0c\u5b58\u50a8\u7684\u503c\u4e5f\u968f\u4e4b\u6d88\u5931\u3002 mutableStateOf \u4f1a\u521b\u5efa\u53ef\u89c2\u5bdf\u7684 MutableState<T> \uff0c\u540e\u8005\u662f Compose \u8fd0\u884c\u65f6\u53ef\u89c2\u5bdf\u7c7b\u578b\u3002 interface MutableState < T > : State < T > { override var value : T } value \u6709\u4efb\u4f55\u66f4\u6539\uff0c\u7cfb\u7edf\u4f1a\u5b89\u6392\u91cd\u7ec4\uff0c\u8bfb\u53d6value \u7684\u6240\u6709Composable \u51fd\u6570\u3002 \u5728Composable\u4e2d\u58f0\u660e MutableState \u5bf9\u8c61\u6709\u4e09\u79cd\u65b9\u6cd5\uff1a val mutableState = remember { mutableStateOf(default) } var value by remember { mutableStateOf(default) } val (value, setValue) = remember { mutableStateOf(default) } \u8fd9\u4e09\u79cd\u65b9\u6cd5\u662f\u7b49\u6548\u7684\uff0c\u4ee5\u8bed\u6cd5\u7cd6\u7684\u5f62\u5f0f\u63d0\u4f9b\u4e0d\u540c\u7684\u7528\u6cd5\u3002\u4f7f\u7528 by \u8bed\u6cd5\u9700\u8981\u5bfc\u5165\uff1a import androidx.compose.runtime.getValue import androidx.compose.runtime.setValue \u4f60\u53ef\u4ee5\u5c06\u72b6\u6001\u503c\u4f5c\u4e3a Composable \u7684\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u7528\u4f5c\u903b\u8f91\u8bed\u53e5\u4e2d\u7684\u5224\u65ad\u6761\u4ef6\u3002 @Composable fun HelloContent () { Column ( modifier = Modifier . padding ( 16. dp )) { var name by remember { mutableStateOf ( \"\" ) } if ( name . isNotEmpty ()) { Text ( text = \"Hello, $ name !\" , modifier = Modifier . padding ( bottom = 8. dp ), style = MaterialTheme . typography . h5 ) } OutlinedTextField ( value = name , onValueChange = { name = it }, label = { Text ( \"Name\" ) } ) } } Warning \u867d\u7136 remember \u53ef\u4ee5\u5728\u91cd\u7ec4\u540e\u4fdd\u6301\u72b6\u6001\uff0c\u4f46\u5982\u679c\u662f\u5e94\u7528\u7684\u914d\u7f6e\u66f4\u65b0\u4e86\uff0c\u6bd4\u5982\u5c4f\u5e55\u65cb\u8f6c\uff0c\u8fd9\u65f6\u5019\u8fd9\u4e2a\u72b6\u6001\u4e5f\u4f1a\u91cd\u7f6e\u3002\u56e0\u6b64\uff0c\u5fc5\u987b\u4f7f\u7528 rememberSaveable \u3002 rememberSaveable \u4f1a\u81ea\u52a8\u4fdd\u5b58\u53ef\u4fdd\u5b58\u7684 Bundle \u4e2d\u7684\u503c\u3002\u5bf9\u4e8e\u5176\u4ed6\u503c\uff0c\u53ef\u4ee5\u5c06\u5176\u4f20\u5165\u81ea\u5b9a\u4e49 Saver \u5bf9\u8c61\u3002","title":"composable \u4e2d\u7684\u72b6\u6001"},{"location":"State/#_1","text":"Jetpack Compose \u4e0d\u5f3a\u5236\u4f7f\u7528 MutableState \u5b58\u50a8\u72b6\u6001\uff0c\u4e5f\u652f\u6301\u5176\u4ed6\u53ef\u89c2\u5bdf\u7c7b\u578b\u3002\u4f46\u5728 Jetpack Compose \u4e2d\u8bfb\u53d6\u5176\u4ed6\u53ef\u89c2\u5bdf\u7c7b\u578b\u4e4b\u524d\uff0c\u5fc5\u987b\u5c06\u5176\u8f6c\u4e3a State \uff0c\u4ee5\u4fbf Jetpack Compose \u53ef\u4ee5\u5728\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\u81ea\u52a8\u91cd\u7ec4\u754c\u9762\u3002 \u5176\u4ed6\u53ef\u7528\u7684\u53ef\u89c2\u5bdf\u7c7b\u578b\uff1a LiveData Flow RxJava2 Tip Compose \u662f\u901a\u8fc7\u8bfb\u53d6State \u5bf9\u8c61\u81ea\u52a8\u91cd\u7ec4\u754c\u9762\u7684\u3002 \u5982\u679c\u5728 Compose \u4e2d\u4f7f\u7528 LiveData \u7b49\u5176\u4ed6\u53ef\u89c2\u5bdf\u7c7b\u578b\uff0c\u5e94\u8be5\u5148\u5c06\u5176\u8f6c\u6362\u4e3a State \u7136\u540e\u518d\u4f7f\u7528\u3002\u6bd4\u5982 LiveData<T>.observeAsState() \u3002 Warning \u5728 Compose \u4e2d\u5c06\u53ef\u53d8\u5bf9\u8c61\uff0c\u5982 ArrayList \u6216 mutableListOf()\u7b49\u7528\u4f5c\u72b6\u6001\uff0c\u53ef\u4ee5\u9020\u6210\u754c\u9762\u65e0\u6cd5\u66f4\u65b0\uff0c\u7528\u6237\u770b\u5230\u7684\u6c38\u8fdc\u662f\u65e7\u7684\u6570\u636e\u3002\u5efa\u8bae\u4f7f\u7528\u53ef\u89c2\u5bdf\u7684\u6570\u636e\u5b58\u50a8\u5668\uff0c\u5982 State >\u548c\u4e0d\u53ef\u53d8\u7684 listOf()\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4e0d\u53ef\u89c2\u5bdf\u7684\u53ef\u53d8\u5bf9\u8c61\u3002","title":"\u5176\u4ed6\u53ef\u89c2\u5bdf\u5bf9\u8c61"},{"location":"State/#_2","text":"\u4f7f\u7528 remember \u5b58\u50a8\u5bf9\u8c61\u7684 Composable \u4e2d\u521b\u5efa\u5185\u90e8\u72b6\u6001\uff0c\u4f7f\u8be5Composable\u6709\u4e86\u72b6\u6001\uff0c\u4f1a\u5728\u5176\u5185\u90e8\u4fdd\u6301\u548c\u4fee\u6539\u81ea\u5df1\u7684\u72b6\u6001\u3002\u5728\u8c03\u7528\u8005\u4e0d\u9700\u8981\u63a7\u5236\u548c\u7ba1\u7406\u72b6\u6001\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e48\u64cd\u4f5c\u662f\u53ef\u4ee5\u7684\u3002\u4f46\u662f\u4e00\u822c\u8fd9\u79cdComposable\u4e0d\u80fd\u590d\u7528\uff0c\u4e5f\u4e0d\u597d\u6d4b\u8bd5\u3002 \u56e0\u6b64\u5982\u679c\u5728\u7f16\u5199\u7684\u7ec4\u4ef6\u8003\u8651\u590d\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u5c06\u72b6\u6001\u79fb\u5230 Composable \u7ec4\u4ef6\u7684\u8c03\u7528\u8005\uff0c\u4fdd\u8bc1Composable\u672c\u8eab\u662f\u65e0\u72b6\u6001\u7684\uff0c\u8fd9\u79cd\u64cd\u4f5c\u53eb\u505a\u72b6\u6001\u63d0\u5347\u3002 Jetpack Compose \u4e2d\u4e00\u822c\u7684\u72b6\u6001\u63d0\u5347\u6a21\u5f0f\u662f\u5c06\u72b6\u6001\u53d8\u91cf\u66ff\u6362\u4e3a\u4e24\u4e2a\u53c2\u6570\uff1a value:T \uff1a\u8981\u663e\u793a\u7684\u5f53\u524d\u503c onValueChange:(T) -> Unit \uff1a\u8bf7\u6c42\u66f4\u6539\u503c\u7684\u4e8b\u4ef6\uff0c\u5176\u4e2d T \u662f\u5efa\u8bae\u7684\u65b0\u503c \u5176\u5b9e\uff0c\u5e76\u4e0d\u4e00\u5b9a\u5b9a\u4e49\u4e3a onValueChange \uff0c\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u64cd\u4f5c\u6765\u5b9a\u4e49\u66f4\u6709\u610f\u4e49\u7684\u540d\u79f0\u3002\u6bd4\u5982 onExpand \u548c onCollapse\u3002 \u4ee5\u8fd9\u79cd\u65b9\u5f0f\u63d0\u5347\u7684\u72b6\u6001\u5177\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u5c5e\u6027\uff1a \u5355\u4e00\u53ef\u4fe1\u6765\u6e90\uff1a\u901a\u8fc7\u79fb\u52a8\u72b6\u6001\u800c\u4e0d\u662f\u590d\u5236\u72b6\u6001\uff0c\u6765\u786e\u4fdd\u53ea\u6709\u4e00\u4e2a\u53ef\u4fe1\u7684\u6570\u636e\u6765\u6e90\uff0c\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b bug \u5c01\u88c5\uff1a\u53ea\u6709\u6709\u72b6\u6001\u7684Composable\u80fd\u591f\u4fee\u6539\u5176\u72b6\u6001 \u53ef\u5171\u4eab\uff1a\u53ef\u4e0e\u591a\u4e2aComposable\u5171\u4eab\u63d0\u5347\u7684\u72b6\u6001 \u53ef\u62e6\u622a\uff1a\u65e0\u72b6\u6001Composable\u7684\u8c03\u7528\u8005\u53ef\u4ee5\u5728\u66f4\u6539\u72b6\u6001\u524d\u51b3\u5b9a\u5ffd\u7565\u6216\u4fee\u6539\u4e8b\u4ef6 \u89e3\u8026\uff1a\u65e0\u72b6\u6001Composable\u7684\u72b6\u6001\u53ef\u4ee5\u5b58\u50a8\u5728\u4efb\u4f55\u4f4d\u7f6e \u5728\u672c\u793a\u4f8b\u4e2d\uff0c\u60a8\u4ece HelloContent \u4e2d\u63d0\u53d6 name \u548c onValueChange\uff0c\u5e76\u6309\u7167\u53ef\u7ec4\u5408\u9879\u7684\u6811\u7ed3\u6784\u5c06\u5b83\u4eec\u79fb\u81f3\u53ef\u8c03\u7528 HelloContent \u7684 HelloScreen \u4e2d\u3002 @Composable fun HelloScreen () { var name by rememberSaveable { mutableStateOf ( \"\" ) } HelloContent ( name = name , onNameChange = { name = it }) } @Composable fun HelloContent ( name : String , onNameChange : ( String ) -> Unit ) { Column ( modifier = Modifier . padding ( 16. dp )) { Text ( text = \"Hello, $ name \" , modifier = Modifier . padding ( bottom = 8. dp ), style = MaterialTheme . typography . h5 ) OutlinedTextField ( value = name , onValueChange = onNameChange , label = { Text ( \"Name\" ) } ) } } \u901a\u8fc7\u4ece HelloContent \u4e2d\u63d0\u5347\u51fa\u72b6\u6001\uff0c\u66f4\u5bb9\u6613\u63a8\u65ad\u8be5Composable\u5728\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u91cd\u590d\u4f7f\u7528\u5b83\uff0c\u4ee5\u53ca\u8fdb\u884c\u6d4b\u8bd5\u3002HelloContent \u4e0e\u72b6\u6001\u7684\u5b58\u50a8\u65b9\u5f0f\u89e3\u8026\u3002\u89e3\u8026\u610f\u5473\u7740\uff0c\u5982\u679c\u60a8\u4fee\u6539\u6216\u66ff\u6362 HelloScreen\uff0c\u4e0d\u5fc5\u66f4\u6539 HelloContent \u7684\u5b9e\u73b0\u65b9\u5f0f\u3002 \u72b6\u6001\u4e0b\u964d\u3001\u4e8b\u4ef6\u4e0a\u5347\u7684\u8fd9\u79cd\u6a21\u5f0f\u79f0\u4e3a\u201c\u5355\u5411\u6570\u636e\u6d41\u201d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u72b6\u6001\u4f1a\u4ece HelloScreen \u4e0b\u964d\u4e3a HelloContent\uff0c\u4e8b\u4ef6\u4f1a\u4ece HelloContent \u4e0a\u5347\u4e3a HelloScreen\u3002\u901a\u8fc7\u9075\u5faa\u5355\u5411\u6570\u636e\u6d41\uff0c\u60a8\u53ef\u4ee5\u5c06\u5728\u754c\u9762\u4e2d\u663e\u793a\u72b6\u6001\u7684\u53ef\u7ec4\u5408\u9879\u4e0e\u5e94\u7528\u4e2d\u5b58\u50a8\u548c\u66f4\u6539\u72b6\u6001\u7684\u90e8\u5206\u89e3\u8026\u3002 Note When hoisting state, there are three rules to help you figure out where state should go: State should be hoisted to at least the lowest common parent of all composables that use the state (read). If two states change in response to the same events they should be hoisted together. State should be hoisted to at least the highest level it may be changed (write). \u63d0\u5347\u72b6\u6001\u65f6\uff0c\u6709\u4e09\u6761\u89c4\u5219\uff1a \u72b6\u6001\u5e94\u81f3\u5c11\u63d0\u5347\u5230\u4f7f\u7528\u8be5\u72b6\u6001(\u8bfb\u53d6)\u7684\u6240\u6709Composable\u7684\u6700\u4f4e\u5171\u540c\u7236\u9879 \u72b6\u6001\u5e94\u81f3\u5c11\u63d0\u5347\u5230\u5b83\u53ef\u4ee5\u53d1\u751f\u53d8\u5316(\u5199\u5165)\u7684\u6700\u9ad8\u7ea7\u522b \u5982\u679c\u4e24\u79cd\u72b6\u6001\u53d1\u751f\u53d8\u5316\u4ee5\u54cd\u5e94\u76f8\u540c\u7684\u4e8b\u4ef6\uff0c\u5b83\u4eec\u5e94\u8be5\u4e00\u76f4\u63d0\u5347\u3002","title":"\u72b6\u6001\u63d0\u5347"},{"location":"State/#_3","text":"\u5728\u91cd\u65b0\u521b\u5efa Activity \u6216\u8fdb\u7a0b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 rememberSaverable \u6062\u590d\u754c\u9762\u72b6\u6001\u3002","title":"\u6062\u590d\u72b6\u6001"},{"location":"State/#_4","text":"\u6dfb\u52a0\u5230 Bundle \u7684\u6240\u6709\u6570\u636e\u7c7b\u578b\u90fd\u4f1a\u81ea\u52a8\u4fdd\u5b58\u3002\u5982\u679c\u8981\u4fdd\u5b58\u65e0\u6cd5\u6dfb\u52a0\u5230 Bundle \u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f","title":"\u5b58\u50a8\u65b9\u5f0f"},{"location":"State/#parcelize","text":"\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5411\u5bf9\u8c61\u6dfb\u52a0@Parcelize \u6ce8\u89e3\u3002 @Parcelize data class City ( val name : String , val country : String ) : Parcelable @Composable fun CityScreen () { var selectedCity = rememberSaveable { mutableStateOf ( City ( \"Madrid\" , \"Spain\" )) } }","title":"Parcelize"},{"location":"State/#mapsaver","text":"\u5982\u679c\u67d0\u79cd\u539f\u56e0\u5bfc\u81f4 @Parcelize \u4e0d\u5408\u9002\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 mapSaver \u5b9a\u4e49\u81ea\u5df1\u7684\u89c4\u5219\uff0c\u89c4\u5b9a\u5982\u4f55\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u7cfb\u7edf\u53ef\u4fdd\u5b58\u5230 Bundle \u7684\u4e00\u7ec4\u503c\u3002 data class City ( val name : String , val country : String ) val CitySaver = run { val nameKey = \"Name\" val countryKey = \"Country\" mapSaver ( save = { mapOf ( nameKey to it . name , countryKey to it . country ) }, restore = { City ( it [ nameKey ] as String , it [ countryKey ] as String ) } ) } @Composable fun CityScreen () { var selectedCity = rememberSaveable ( stateSaver = CitySaver ) { mutableStateOf ( City ( \"Madrid\" , \"Spain\" )) } }","title":"MapSaver"},{"location":"State/#listsaver","text":"\u4e3a\u4e86\u907f\u514d\u9700\u8981\u4e3a\u6620\u5c04\u5b9a\u4e49\u952e\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 listSaver \u5e76\u5c06\u5176\u7d22\u5f15\u7528\u4f5c\u952e\uff1a data class City ( val name : String , val country : String ) val CitySaver = listSaver < City , Any > ( save = { listOf ( it . name , it . country ) }, restore = { City ( it [ 0 ] as String , it [ 1 ] as String ) } ) @Composable fun CityScreen () { var selectedCity = rememberSaveable ( stateSaver = CitySaver ) { mutableStateOf ( City ( \"Madrid\" , \"Spain\" )) } }","title":"ListSaver"},{"location":"State/#_5","text":"\u5728\u524d\u9762\u8bf4\u5230\u7684\u72b6\u6001\u63d0\u5347\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u628a\u72b6\u6001\u8fdb\u884c\u4e00\u5b9a\u7684\u7edf\u4e00\u7ba1\u7406\u3002\u4f46\u662f\u5982\u679c\u968f\u7740\u9879\u76ee\u529f\u80fd\u7684\u4e30\u5bcc\uff0c\u9700\u8981\u8ddf\u8e2a\u7684\u72b6\u6001\u6570\u91cf\u4e5f\u968f\u4e4b\u589e\u52a0\u6216\u8005Composable\u4e2d\u9700\u8981\u6267\u884c\u4e1a\u52a1\u903b\u8f91\u65f6\uff0c\u6700\u597d\u5c06\u903b\u8f91\u548c\u72b6\u6001\u4e8b\u52a1\u59d4\u6d3e\u7ed9\u5176\u4ed6\u7c7b\uff08\u72b6\u6001\u5bb9\u5668\uff09 \u4e0b\u9762\u5c06\u4ecb\u7ecd\u5982\u4f55\u5728 Compose \u4e2d\u4ee5\u4e0d\u540c\u65b9\u5f0f\u7ba1\u7406\u72b6\u6001\u3002\u6839\u636eComposable\u7684\u590d\u6742\u6027\uff0c\u9700\u8981\u8003\u8651\u4e0d\u540c\u7684\u65b9\u6848\uff1a Composables\uff1a\u7528\u4e8e\u7ba1\u7406\u7b80\u5355\u7684\u754c\u9762\u5143\u7d20\u72b6\u6001 \u72b6\u6001\u5bb9\u5668\uff1a\u7528\u4e8e\u7ba1\u7406\u590d\u6742\u7684\u754c\u9762\u5143\u7d20\u72b6\u6001\u4e14\u62e5\u6709\u754c\u9762\u903b\u8f91 ViewModel\uff1a\u63d0\u4f9b\u5bf9\u4e8e\u4e1a\u52a1\u903b\u8f91\u548c UI \u72b6\u6001\u7684\u72b6\u6001\u5bb9\u5668 \u72b6\u6001\u5bb9\u5668\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u6240\u7ba1\u7406\u7684\u754c\u9762\u5143\u7d20\u7684\u8303\u56f4\uff0c\u6709\u65f6\u5019\u751a\u81f3\u9700\u8981\u5c06\u67d0\u4e2a\u72b6\u6001\u5bb9\u5668\u96c6\u6210\u5230\u5176\u4ed6\u72b6\u6001\u5bb9\u5668\u4e2d\u3002 \u4e0b\u56fe\u6240\u793a\u4e3a Compose \u72b6\u6001\u7ba1\u7406\u6240\u6d89\u53ca\u7684\u5404\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u6982\u89c8\u3002 Composable\u53ef\u4ee5\u4fe1\u8d56\u4e8e0\u4e2a\u6216\u591a\u4e2a\u72b6\u6001\u5bb9\u5668\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u5176\u590d\u6742\u6027 \u5982\u679c\u9700\u8981\u8bbf\u95ee\u4e1a\u52a1\u903b\u8f91\u6216UI \u72b6\u6001\uff0c\u5219\u53ef\u80fd\u9700\u8981\u4fe1\u8d56\u4e8e ViewModel ViewModel \u4fe1\u8d56\u4e8e\u4e1a\u52a1\u5c42\u6216\u6570\u636e\u5c42","title":"\u7ba1\u7406\u72b6\u6001"},{"location":"State/#_6","text":"\u5728 Android \u5e94\u7528\u4e2d\uff0c\u9700\u8981\u8003\u8651\u4e0d\u540c\u7c7b\u578b\u7684\u72b6\u6001\uff1a UI\u7ec4\u4ef6\u72b6\u6001\u662f\u7ec4\u4ef6\u7684\u63d0\u5347\u72b6\u6001\u3002\u4f8b\u5982 ScaffoldState \u7528\u4e8e\u5904\u7406 Scaffold \u7684\u72b6\u6001\u3002 \u754c\u9762 UI \u72b6\u6001\u662f\u754c\u9762\u4e0a\u9700\u8981\u663e\u793a\u7684\u5185\u5bb9\u3002\u6bd4\u5982\u4e00\u4e2a\u5546\u57ce APP \u4e0a\u7684\u8d2d\u7269\u8f66\u754c\u9762\u53ef\u80fd\u5305\u542b\u5546\u54c1\u4fe1\u606f\u3001\u5411\u7528\u6237\u663e\u793a\u7684\u6d88\u606f\u6216\u52a0\u8f7d\u6807\u8bb0\u3002\u8be5\u72b6\u6001\u901a\u5e38\u4f1a\u548c\u5176\u4ed6\u5c42\u76f8\u5173\u8054\u3002 \u6b64\u5916\uff0c\u903b\u8f91\u4e5f\u6709\u4e0d\u540c\u7684\u7c7b\u578b\uff1a \u754c\u9762\u64cd\u4f5c\u903b\u8f91\u548c UI \u903b\u8f91\uff1a\u5982\u4f55\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5bfc\u822a\u903b\u8f91\u51b3\u5b9a\u663e\u793a\u54ea\u4e2a\u754c\u9762\u3002 \u4e1a\u52a1\u903b\u8f91\u51b3\u5b9a\u5982\u4f55\u5904\u7406\u72b6\u6001\u53d8\u5316\uff0c\u901a\u5e38\u4f4d\u4e8e\u4e1a\u52a1\u5c42\u6216\u6570\u636e\u5c42\uff0c\u800c\u4e0d\u5e94\u8be5\u653e\u5728 UI \u5c42","title":"\u4e0d\u540c\u7c7b\u578b\u7684\u72b6\u6001\u548c\u903b\u8f91"},{"location":"State/#composables","text":"\u5982\u679c\u72b6\u6001\u6570\u91cf\u8f83\u5c11\u548c\u903b\u8f91\u6bd4\u8f83\u7b80\u5355\uff0c\u5728Composable\u4e2d\u76f4\u63a5\u589e\u52a0\u903b\u8f91\u548c\u72b6\u6001\u662f\u53ef\u4ee5\u7684\uff0c\u4e0e\u5176\u76f8\u5173\u7684\u4ea4\u4e92\u90fd\u5e94\u8be5\u5728\u8fd9\u4e2aComposable\u8fdb\u884c\u3002\u4f46\u662f\u5982\u679c\u5c06\u5b83\u4f20\u9012\u7ed9\u5176\u4ed6Composable\uff0c\u8fd9\u5c31\u4e0d\u7b26\u5408\u5355\u4e00\u53ef\u4fe1\u6765\u6e90\u539f\u5219\uff0c\u800c\u4e14\u4f1a\u4f7f\u8c03\u8bd5\u66f4\u591a\u56f0\u96be\u3002 @Composable fun MyApp () { MyTheme { val scaffoldState = rememberScaffoldState () val coroutineScope = rememberCoroutineScope () Scaffold ( scaffoldState = scaffoldState ) { MyContent ( showSnackbar = { message -> coroutineScope . launch { scaffoldState . snackbarHostState . showSnackbar ( message ) } } ) } } }","title":"Composables \u4f5c\u4e3a\u53ef\u4fe1\u6765\u6e90"},{"location":"State/#_7","text":"\u5f53Composable\u6d89\u53ca\u591a\u4e2a\u754c\u9762\u7684\u72b6\u6001\u7b49\u590d\u6742\u903b\u8f91\u65f6\uff0c\u5e94\u5c06\u76f8\u5e94\u4e8b\u52a1\u59d4\u6d3e\u7ed9\u72b6\u6001\u5bb9\u5668\u3002\u8fd9\u6837\u66f4\u6613\u4e8e\u5355\u72ec\u5bf9\u8be5\u903b\u8f91\u8fdb\u884c\u6d4b\u8bd5\uff0c\u8fd8\u964d\u4f4e\u4e86Composable\u7684\u590d\u6742\u6027\u3002\u4fdd\u8bc1Composable\u53ea\u662f\u8d1f\u8d23\u5c55\u793a\uff0c\u800c\u72b6\u6001\u5bb9\u5668\u8d1f\u8d23\u903b\u8f91\u548c\u72b6\u6001 \u5728\u4e0a\u9762 MyApp \u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u589e\u52a0\u66f4\u591a\u7684\u903b\u8f91\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2aMyAppState\u72b6\u6001\u5bb9\u5668\u6765\u7ba1\u7406 // Plain class that manages App's UI logic and UI elements' state class MyAppState ( val scaffoldState : ScaffoldState , val navController : NavHostController , private val resources : Resources , /* ... */ ) { val bottomBarTabs = /* State */ // Logic to decide when to show the bottom bar val shouldShowBottomBar : Boolean get () = /* ... */ // Navigation logic, which is a type of UI logic fun navigateToBottomBarRoute ( route : String ) { /* ... */ } // Show snackbar using Resources fun showSnackbar ( message : String ) { /* ... */ } } @Composable fun rememberMyAppState ( scaffoldState : ScaffoldState = rememberScaffoldState (), navController : NavHostController = rememberNavController (), resources : Resources = LocalContext . current . resources , /* ... */ ) = remember ( scaffoldState , navController , resources , /* ... */ ) { MyAppState ( scaffoldState , navController , resources , /* ... */ ) } \u56e0\u4e3a\u5728\u4f7f\u7528MyAppState \u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528 remember \u6765\u8fdb\u884c\u4fe1\u8d56\uff0c\u6240\u4ee5\u901a\u5e38\u60c5\u51b5\u4e0b\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a rememberMyAppState \u65b9\u6cd5\u6765\u76f4\u63a5\u8fd4\u56deMyAppState\u5b9e\u4f8b\u3002 \u90a3\u4e48\u73b0\u5728 MyApp \u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u53d8\u5f97\u5f88\u7b80\u5355\u4e86 @Composable fun MyApp () { MyTheme { val myAppState = rememberMyAppState () Scaffold ( scaffoldState = myAppState . scaffoldState , bottomBar = { if ( myAppState . shouldShowBottomBar ) { BottomBar ( tabs = myAppState . bottomBarTabs , navigateToRoute = { myAppState . navigateToBottomBarRoute ( it ) } ) } } ) { NavHost ( navController = myAppState . navController , \"initial\" ) { /* ... */ } } } }","title":"\u72b6\u6001\u5bb9\u5668\u4f5c\u4e3a\u53ef\u4fe1\u6765\u6e90"},{"location":"State/#viewmodel","text":"ViewModel \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u72b6\u6001\u5bb9\u5668\uff0c\u4e3b\u8981\u8d1f\u8d23\uff1a \u5bf9\u5e94\u7528\u7684\u4e1a\u52a1\u903b\u8f91\u6216\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u4e2a\u903b\u8f91\u901a\u5e38\u662f\u5728\u4e1a\u52a1\u5c42\u6216\u6570\u636e\u5c42 \u5904\u7406\u5373\u5c06\u5728\u754c\u9762\u4e0a\u5c55\u793a\u7684\u5e94\u7528\u6570\u636e ViewModel \u7684\u751f\u547d\u5468\u671f\u5f80\u5f80\u662f\u6bd4\u8f83\u957f\u7684\uff0c\u539f\u56e0\u662f\u5b83\u4eec\u5728\u914d\u7f6e\u53d1\u751f\u53d8\u5316\u540e\u4ecd\u7136\u6709\u6548\u3002ViewModel \u53ef\u4ee5\u9075\u5faa Activity\u3001Fragment\u3001\u6216\u5bfc\u822a\uff08\u5982\u679c\u4f7f\u7528\u4e86 \u5bfc\u822a\u5e93 \uff09\u7684\u751f\u547d\u5468\u671f\u3002\u6b63\u56e0\u4e3a ViewModel \u7684\u751f\u547d\u5468\u671f\u8f83\u957f\uff0c\u56e0\u6b64\u4e0d\u5e94\u8be5\u957f\u671f\u6301\u6709\u548c Composable \u5bc6\u5207\u76f8\u5173\u7684\u4e00\u4e9b\u72b6\u6001\uff0c\u5426\u5219\uff0c\u53ef\u4ee5\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002 data class ExampleUiState ( dataToDisplayOnScreen : List < Example > = emptyList (), userMessages : List < Message > = emptyList (), loading : Boolean = false ) class ExampleViewModel ( private val repository : MyRepository , private val savedState : SavedStateHandle ) : ViewModel () { var uiState by mutableStateOf < ExampleUiState > (...) private set // Business logic fun somethingRelatedToBusinessLogic () { ... } } @Composable fun ExampleScreen ( viewModel : ExampleViewModel = viewModel ()) { val uiState = viewModel . uiState ... Button ( onClick = { viewModel . somethingRelatedToBusinessLogic () }) { Text ( \"Do something\" ) } } Tip \u5982\u679c ViewModel \u4e2d\u5305\u542b\u8981\u5728\u8fdb\u7a0b\u91cd\u5efa\u540e\u4fdd\u7559\u7684\u72b6\u6001\uff0c\u8bf7\u4f7f\u7528 SavedStateHandle \u3002","title":"ViewModel \u4f5c\u4e3a\u53ef\u4fe1\u6765\u6e90"},{"location":"State/#_8","text":"https://developer.android.com/jetpack/compose/state","title":"\u66f4\u591a"},{"location":"about/","text":"\u5173\u4e8e \u00b6 \u5173\u4e8e\u5185\u5bb9 \u00b6 \u672c\u5185\u5bb9\u662f\u96c6\u4e8e\u7f51\u7edc\uff0c\u5927\u90e8\u5206\u5185\u5bb9\u6765\u81ea\u5b98\u65b9\u6587\u6863\u4ee5\u53ca\u9605\u8bfb\u6e90\u7801\u5f97\u6765\u7684\u7ed3\u679c\uff0c\u4e5f\u6709\u90e8\u5206\u662f\u770b\u4e86\u4e00\u4e9b\u5927\u4f6c\u7684\u89c6\u9891\u548c\u6587\u7ae0\uff0c\u5982\u679c\u5185\u5bb9\u6709\u4efb\u4f55\u4fb5\u6743\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb\u6211\u8fdb\u884c\u5220\u9664\u5904\u7406\u3002 \u627e\u5230\u7ec4\u7ec7 \u00b6 \u7ec4\u7ec7QQ\u7fa4:962220276 \u5173\u4e8e\u4f5c\u8005 \u00b6 \u4f5c\u8005\u662f\u8fd8\u662f\u6bcf\u5929\u5fd9\u4e8e\u5de5\u4f5c\u7684\u5c0f\u7801\u519c","title":"\u5173\u4e8e"},{"location":"about/#_1","text":"","title":"\u5173\u4e8e"},{"location":"about/#_2","text":"\u672c\u5185\u5bb9\u662f\u96c6\u4e8e\u7f51\u7edc\uff0c\u5927\u90e8\u5206\u5185\u5bb9\u6765\u81ea\u5b98\u65b9\u6587\u6863\u4ee5\u53ca\u9605\u8bfb\u6e90\u7801\u5f97\u6765\u7684\u7ed3\u679c\uff0c\u4e5f\u6709\u90e8\u5206\u662f\u770b\u4e86\u4e00\u4e9b\u5927\u4f6c\u7684\u89c6\u9891\u548c\u6587\u7ae0\uff0c\u5982\u679c\u5185\u5bb9\u6709\u4efb\u4f55\u4fb5\u6743\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb\u6211\u8fdb\u884c\u5220\u9664\u5904\u7406\u3002","title":"\u5173\u4e8e\u5185\u5bb9"},{"location":"about/#_3","text":"\u7ec4\u7ec7QQ\u7fa4:962220276","title":"\u627e\u5230\u7ec4\u7ec7"},{"location":"about/#_4","text":"\u4f5c\u8005\u662f\u8fd8\u662f\u6bcf\u5929\u5fd9\u4e8e\u5de5\u4f5c\u7684\u5c0f\u7801\u519c","title":"\u5173\u4e8e\u4f5c\u8005"},{"location":"navigaiton/","text":"","title":"\u5bfc\u822a"},{"location":"permissions/","text":"","title":"\u6743\u9650"},{"location":"struct/","text":"\u4f60\u7684\u7b2c\u4e00\u6b21 \u00b6 Compose \u9879\u76ee\u4e0e\u4f20\u7edf\u9879\u76ee\u7684\u533a\u522b \u00b6 \u539f\u59cb xml \u5e03\u5c40\u9879\u76ee\u4e2d\uff0c\u5728 Activity \u9700\u8981\u5c55\u793a\u67d0\u4e2a\u5e03\u5c40\u65f6\u901a\u8fc7 setContentView(R.layout.main) \u6765\u8bbe\u7f6e\u4e00\u4e2a\u5e03\u5c40\u6216 View \u800c Compose \u4e0b\u5219\u4f7f\u7528 setContent \uff0c\u63a5\u6536\u7684\u662f\u4e00\u4e2a Composable setContent { ComposeExampleTheme { TextDemo () } } Composable \u51fd\u6570 \u00b6 Composable \u51fd\u6570\u662f\u6784\u5efa Jetpack Compose \u5e94\u7528\u7684\u57fa\u7840\u6a21\u5757\u3002 \u8fd9\u4e9b\u51fd\u6570\u8ba9\u4f60\u901a\u8fc7\u63cf\u8ff0\u5f62\u72b6\u548c\u6570\u636e\u4fe1\u8d56\u6027\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u7684\u754c\u9762\uff0c\u800c\u4e0d\u662f\u4e13\u6ce8\u4e8e\u754c\u9762\u7684\u6784\u5efa\u8fc7\u7a0b\u3002\u53ea\u9700\u8981\u5728\u51fd\u6570\u4e0a\u9762\u6dfb\u52a0 @Composable \u6ce8\u89e3\uff0c\u5c31\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u51fd\u6570\u6210\u4e3a\u4e00\u4e2a Composable Theme \u00b6 \u9879\u76ee\u9ed8\u8ba4\u4f1a\u81ea\u52a8\u4f7f\u7528\u9879\u76ee\u540d\u79f0\u521b\u5efa\u4e00\u4e2a\u4e3b\u9898\uff0c\u5982\u679c\u60f3\u81ea\u5b9a\u4e49\u4e3b\u9898\u53ef\u4ee5\u5bf9\u540d\u79f0\u53ca\u91cc\u9762\u7684\u6587\u5b57\u3001\u989c\u8272\u7b49\u8fdb\u884c\u5b9a\u4e49\u3002 \u9884\u89c8\u754c\u9762 \u00b6 \u901a\u8fc7\u5728\u51fd\u6570\u524d\u9762\u4f7f\u7528 @Preview \u6ce8\u89e3\u6765\u6807\u8bc6\u51fd\u6570\u4e3a\u9884\u89c8\u3002\u6b64\u65f6\u5728\u53f3\u4fa7\u5c06\u663e\u793a\u9884\u89c8\u7a97\u53e3\uff0c\u5982\u679c\u5f53\u524d\u72b6\u6001\u662f\u5728Code\u4e0b\uff0c\u5219\u9700\u8981\u70b9\u51fb\u53f3\u4e0a\u89d2\u5de5\u5177\u680f\u4e2d\u7684 Split \u6216 Design \u5c55\u793a\u9884\u89c8\u754c\u9762\u3002 @Preview \u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u53c2\u6570\u5728\u8fbe\u5230\u4e0d\u540c\u7684\u76ee\u7684 @Composable @Preview ( name = \"\u9884\u89c8\u540d\u79f0\" , showSystemUi = true , group = \"group1\" , device = Devices . NEXUS_7 ) fun TextDemoPreview (){ TextDemo () } name :\u8bbe\u7f6e\u9884\u89c8\u540d\u79f0 showSystemUI = true : \u8bbe\u7f6e\u662f\u5426\u663e\u793a\u7cfb\u7edf\u754c\u9762 showBackground \u548c backgroundColor : \u8bbe\u7f6e\u80cc\u666f\u989c\u8272\uff0c\u6b64\u9879\u548c showSystemUI \u4e92\u65a5 widthDp \u548c heightDp :\u8bbe\u7f6e\u9884\u89c8\u6a21\u5757\u5927\u5c0f\uff0c\u6b64\u9879\u548c showSystemUI \u4e92\u65a5 group :\u8bbe\u7f6e\u5206\u7ea7 device :\u8bbe\u7f6e\u9884\u89c8\u8bbe\u5907 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u9884\u89c8\u754c\u9762\u4e0a\u6709\u4e24\u4e2a\u6309\u94ae \u6309\u94ae1\u662f\u8fdb\u5165\u4ea4\u4e92\u6a21\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u9884\u89c8\u754c\u9762\u8fdb\u884c\u64cd\u4f5c \u6309\u94ae2\u662f\u5c06\u5f53\u524d\u9884\u89c8\u754c\u9762\u76f4\u63a5\u8fd0\u884c\u5230\u8bbe\u5907\u4e0a\uff0c\u800c\u5ffd\u7565 MainActivity \u6307\u5b9a\u7684\u754c\u9762 Tip \u9884\u89c8\u754c\u9762\u7684\u4ea4\u4e92\u64cd\u4f5c\uff0c\u4e0d\u662f\u6240\u6709\u64cd\u4f5c\u90fd\u652f\u6301\u7684","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"struct/#_1","text":"","title":"\u4f60\u7684\u7b2c\u4e00\u6b21"},{"location":"struct/#compose","text":"\u539f\u59cb xml \u5e03\u5c40\u9879\u76ee\u4e2d\uff0c\u5728 Activity \u9700\u8981\u5c55\u793a\u67d0\u4e2a\u5e03\u5c40\u65f6\u901a\u8fc7 setContentView(R.layout.main) \u6765\u8bbe\u7f6e\u4e00\u4e2a\u5e03\u5c40\u6216 View \u800c Compose \u4e0b\u5219\u4f7f\u7528 setContent \uff0c\u63a5\u6536\u7684\u662f\u4e00\u4e2a Composable setContent { ComposeExampleTheme { TextDemo () } }","title":"Compose \u9879\u76ee\u4e0e\u4f20\u7edf\u9879\u76ee\u7684\u533a\u522b"},{"location":"struct/#composable","text":"Composable \u51fd\u6570\u662f\u6784\u5efa Jetpack Compose \u5e94\u7528\u7684\u57fa\u7840\u6a21\u5757\u3002 \u8fd9\u4e9b\u51fd\u6570\u8ba9\u4f60\u901a\u8fc7\u63cf\u8ff0\u5f62\u72b6\u548c\u6570\u636e\u4fe1\u8d56\u6027\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u7684\u754c\u9762\uff0c\u800c\u4e0d\u662f\u4e13\u6ce8\u4e8e\u754c\u9762\u7684\u6784\u5efa\u8fc7\u7a0b\u3002\u53ea\u9700\u8981\u5728\u51fd\u6570\u4e0a\u9762\u6dfb\u52a0 @Composable \u6ce8\u89e3\uff0c\u5c31\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u51fd\u6570\u6210\u4e3a\u4e00\u4e2a Composable","title":"Composable \u51fd\u6570"},{"location":"struct/#theme","text":"\u9879\u76ee\u9ed8\u8ba4\u4f1a\u81ea\u52a8\u4f7f\u7528\u9879\u76ee\u540d\u79f0\u521b\u5efa\u4e00\u4e2a\u4e3b\u9898\uff0c\u5982\u679c\u60f3\u81ea\u5b9a\u4e49\u4e3b\u9898\u53ef\u4ee5\u5bf9\u540d\u79f0\u53ca\u91cc\u9762\u7684\u6587\u5b57\u3001\u989c\u8272\u7b49\u8fdb\u884c\u5b9a\u4e49\u3002","title":"Theme"},{"location":"struct/#_2","text":"\u901a\u8fc7\u5728\u51fd\u6570\u524d\u9762\u4f7f\u7528 @Preview \u6ce8\u89e3\u6765\u6807\u8bc6\u51fd\u6570\u4e3a\u9884\u89c8\u3002\u6b64\u65f6\u5728\u53f3\u4fa7\u5c06\u663e\u793a\u9884\u89c8\u7a97\u53e3\uff0c\u5982\u679c\u5f53\u524d\u72b6\u6001\u662f\u5728Code\u4e0b\uff0c\u5219\u9700\u8981\u70b9\u51fb\u53f3\u4e0a\u89d2\u5de5\u5177\u680f\u4e2d\u7684 Split \u6216 Design \u5c55\u793a\u9884\u89c8\u754c\u9762\u3002 @Preview \u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u53c2\u6570\u5728\u8fbe\u5230\u4e0d\u540c\u7684\u76ee\u7684 @Composable @Preview ( name = \"\u9884\u89c8\u540d\u79f0\" , showSystemUi = true , group = \"group1\" , device = Devices . NEXUS_7 ) fun TextDemoPreview (){ TextDemo () } name :\u8bbe\u7f6e\u9884\u89c8\u540d\u79f0 showSystemUI = true : \u8bbe\u7f6e\u662f\u5426\u663e\u793a\u7cfb\u7edf\u754c\u9762 showBackground \u548c backgroundColor : \u8bbe\u7f6e\u80cc\u666f\u989c\u8272\uff0c\u6b64\u9879\u548c showSystemUI \u4e92\u65a5 widthDp \u548c heightDp :\u8bbe\u7f6e\u9884\u89c8\u6a21\u5757\u5927\u5c0f\uff0c\u6b64\u9879\u548c showSystemUI \u4e92\u65a5 group :\u8bbe\u7f6e\u5206\u7ea7 device :\u8bbe\u7f6e\u9884\u89c8\u8bbe\u5907 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u9884\u89c8\u754c\u9762\u4e0a\u6709\u4e24\u4e2a\u6309\u94ae \u6309\u94ae1\u662f\u8fdb\u5165\u4ea4\u4e92\u6a21\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u9884\u89c8\u754c\u9762\u8fdb\u884c\u64cd\u4f5c \u6309\u94ae2\u662f\u5c06\u5f53\u524d\u9884\u89c8\u754c\u9762\u76f4\u63a5\u8fd0\u884c\u5230\u8bbe\u5907\u4e0a\uff0c\u800c\u5ffd\u7565 MainActivity \u6307\u5b9a\u7684\u754c\u9762 Tip \u9884\u89c8\u754c\u9762\u7684\u4ea4\u4e92\u64cd\u4f5c\uff0c\u4e0d\u662f\u6240\u6709\u64cd\u4f5c\u90fd\u652f\u6301\u7684","title":"\u9884\u89c8\u754c\u9762"},{"location":"components/Button/","text":"Button \u00b6 \u5c5e\u6027 \u00b6 @Composable fun Button ( onClick : () -> Unit , modifier : Modifier = Modifier , enabled : Boolean = true , interactionSource : MutableInteractionSource = remember { MutableInteractionSource () }, elevation : ButtonElevation? = ButtonDefaults . elevation (), shape : Shape = MaterialTheme . shapes . small , border : BorderStroke? = null , colors : ButtonColors = ButtonDefaults . buttonColors (), contentPadding : PaddingValues = ButtonDefaults . ContentPadding , content : @Composable RowScope .() -> Unit ): Unit \u57fa\u672c\u7528\u6cd5 \u00b6 @Composable fun ButtonSample () { Button ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, ) { Text ( text = \"\u8fd9\u91cc\u6709\u4e00\u4e2a\u6309\u94ae\" ) } } \u53c2\u6570 \u00b6 enabled \u662f\u5426\u542f\u7528\u6216\u7981\u7528 \u7981\u7528\u72b6\u6001 elevation \u6295\u5f71 border \u8fb9\u6846\u7ebf @Composable fun ButtonSample () { Button ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, border = BorderStroke ( 1. dp , Color . Red ) ) { Text ( text = \"\u8fd9\u91cc\u6709\u4e00\u4e2a\u6309\u94ae\" ) } } colors \u8bbe\u7f6e\u989c\u8272\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u989c\u8272\u3001\u524d\u666f\u989c\u8272\u3001\u7981\u7528\u72b6\u6001\u548c\u542f\u52a8\u72b6\u6001\u4e0b\u7684\u989c\u8272 @Composable fun ButtonSample () { Button ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, colors = ButtonDefaults . buttonColors ( backgroundColor = Color . Yellow , contentColor = Color . Green ) ) { Text ( text = \"\u8fd9\u91cc\u6709\u4e00\u4e2a\u6309\u94ae\" ) } } contentPadding \u5185\u5bb9\u5185\u95f4\u8ddd TextButton \u00b6 TextButton \u4e00\u822c\u662f\u7528\u6765\u663e\u793a\u6587\u5b57\u6309\u94ae\u7684 @Composable fun ButtonSample () { TextButton ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, ) { Text ( text = \"TextButton\" ) } } OutlinedButton \u00b6 @Composable fun ButtonSample () { OutlinedButton ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, ) { Text ( text = \"OutlinedButton\" ) } } IconButton \u00b6 \u7528\u6765\u663e\u793a\u56fe\u6807\u6309\u94ae @Composable fun ButtonSample () { IconButton ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, ) { Icon ( imageVector = Icons . Default . Stairs , contentDescription = null ) } }","title":"Button"},{"location":"components/Button/#button","text":"","title":"Button"},{"location":"components/Button/#_1","text":"@Composable fun Button ( onClick : () -> Unit , modifier : Modifier = Modifier , enabled : Boolean = true , interactionSource : MutableInteractionSource = remember { MutableInteractionSource () }, elevation : ButtonElevation? = ButtonDefaults . elevation (), shape : Shape = MaterialTheme . shapes . small , border : BorderStroke? = null , colors : ButtonColors = ButtonDefaults . buttonColors (), contentPadding : PaddingValues = ButtonDefaults . ContentPadding , content : @Composable RowScope .() -> Unit ): Unit","title":"\u5c5e\u6027"},{"location":"components/Button/#_2","text":"@Composable fun ButtonSample () { Button ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, ) { Text ( text = \"\u8fd9\u91cc\u6709\u4e00\u4e2a\u6309\u94ae\" ) } }","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"components/Button/#_3","text":"enabled \u662f\u5426\u542f\u7528\u6216\u7981\u7528 \u7981\u7528\u72b6\u6001 elevation \u6295\u5f71 border \u8fb9\u6846\u7ebf @Composable fun ButtonSample () { Button ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, border = BorderStroke ( 1. dp , Color . Red ) ) { Text ( text = \"\u8fd9\u91cc\u6709\u4e00\u4e2a\u6309\u94ae\" ) } } colors \u8bbe\u7f6e\u989c\u8272\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u989c\u8272\u3001\u524d\u666f\u989c\u8272\u3001\u7981\u7528\u72b6\u6001\u548c\u542f\u52a8\u72b6\u6001\u4e0b\u7684\u989c\u8272 @Composable fun ButtonSample () { Button ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, colors = ButtonDefaults . buttonColors ( backgroundColor = Color . Yellow , contentColor = Color . Green ) ) { Text ( text = \"\u8fd9\u91cc\u6709\u4e00\u4e2a\u6309\u94ae\" ) } } contentPadding \u5185\u5bb9\u5185\u95f4\u8ddd","title":"\u53c2\u6570"},{"location":"components/Button/#textbutton","text":"TextButton \u4e00\u822c\u662f\u7528\u6765\u663e\u793a\u6587\u5b57\u6309\u94ae\u7684 @Composable fun ButtonSample () { TextButton ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, ) { Text ( text = \"TextButton\" ) } }","title":"TextButton"},{"location":"components/Button/#outlinedbutton","text":"@Composable fun ButtonSample () { OutlinedButton ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, ) { Text ( text = \"OutlinedButton\" ) } }","title":"OutlinedButton"},{"location":"components/Button/#iconbutton","text":"\u7528\u6765\u663e\u793a\u56fe\u6807\u6309\u94ae @Composable fun ButtonSample () { IconButton ( onClick = { Log . d ( \"ButtonSample\" , \"click the button\" ) }, ) { Icon ( imageVector = Icons . Default . Stairs , contentDescription = null ) } }","title":"IconButton"},{"location":"components/CheckBox/","text":"","title":"CheckBox"},{"location":"components/Divider/","text":"","title":"Divider"},{"location":"components/Icon/","text":"\u5c5e\u6027 \u00b6 @Composable fun Icon ( imageVector : ImageVector , //bitmap: ImageBitmap,painter: Painter, contentDescription : String? , modifier : Modifier = Modifier , tint : Color = LocalContentColor . current . copy ( alpha = LocalContentAlpha . current ) ) \u7528\u6cd5 \u00b6 \u7528\u6cd5\u4e00 \u00b6 \u53ef\u4ee5\u76f4\u63a5\u5f15\u7528 \u5b98\u65b9\u7684\u56fe\u6807\u5e93 \uff0c\u4f8b\u5982\uff1a Icons.Default.AccountBox @Composable fun IconSample () { Icon ( imageVector = Icons . Default . AccountBox , contentDescription = null ) } \u5728\u5b98\u65b9\u7f51\u7ad9\u4e0a\uff0c\u6211\u4eec\u770b\u5230\u63d0\u4f9b\u7684\u56fe\u6807\u5e93\u4e2d\uff0c\u6709\u4e9b\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u3002\u662f\u56e0\u4e3a\u9ed8\u8ba4 SDK \u4e2d\u53ea\u662f\u5305\u542b\u90e8\u5206\u56fe\u6807\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u66f4\u591a\u56fe\u6807\u9700\u8981\u5f15\u5165\u6269\u5c55\u5e93 implementation \"androidx.compose.material:material-icons-extended:$compose_version\" \u7528\u6cd5\u4e8c \u00b6 \u53ef\u4ee5\u4f7f\u7528 drawble \u91cc\u9762\u7684\u56fe\u7247 @Composable fun IconSample () { Icon ( painter = painterResource ( id = R . drawable . ic_android_black_24dp ), contentDescription = null , tint = Color . Blue ) } \u7528\u6cd5\u4e09 \u00b6 \u53ef\u4ee5\u5f15\u7528 ImageBitmap @Composable fun IconSample () { var bitmap : ImageBitmap ? = null with ( LocalContext . current ){ bitmap = ImageBitmap . imageResource ( resources , R . drawable . newbanner4 ) } bitmap ?. let { Icon ( bitmap = it , contentDescription = null ) } } \u53c2\u6570 \u00b6 tint \u8bbe\u7f6e\u56fe\u6807\u989c\u8272 @Composable fun IconSample () { Icon ( imageVector = Icons . Default . Deck , contentDescription = null , tint = Color . Red ) }","title":"Icon"},{"location":"components/Icon/#_1","text":"@Composable fun Icon ( imageVector : ImageVector , //bitmap: ImageBitmap,painter: Painter, contentDescription : String? , modifier : Modifier = Modifier , tint : Color = LocalContentColor . current . copy ( alpha = LocalContentAlpha . current ) )","title":"\u5c5e\u6027"},{"location":"components/Icon/#_2","text":"","title":"\u7528\u6cd5"},{"location":"components/Icon/#_3","text":"\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528 \u5b98\u65b9\u7684\u56fe\u6807\u5e93 \uff0c\u4f8b\u5982\uff1a Icons.Default.AccountBox @Composable fun IconSample () { Icon ( imageVector = Icons . Default . AccountBox , contentDescription = null ) } \u5728\u5b98\u65b9\u7f51\u7ad9\u4e0a\uff0c\u6211\u4eec\u770b\u5230\u63d0\u4f9b\u7684\u56fe\u6807\u5e93\u4e2d\uff0c\u6709\u4e9b\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u3002\u662f\u56e0\u4e3a\u9ed8\u8ba4 SDK \u4e2d\u53ea\u662f\u5305\u542b\u90e8\u5206\u56fe\u6807\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u66f4\u591a\u56fe\u6807\u9700\u8981\u5f15\u5165\u6269\u5c55\u5e93 implementation \"androidx.compose.material:material-icons-extended:$compose_version\"","title":"\u7528\u6cd5\u4e00"},{"location":"components/Icon/#_4","text":"\u53ef\u4ee5\u4f7f\u7528 drawble \u91cc\u9762\u7684\u56fe\u7247 @Composable fun IconSample () { Icon ( painter = painterResource ( id = R . drawable . ic_android_black_24dp ), contentDescription = null , tint = Color . Blue ) }","title":"\u7528\u6cd5\u4e8c"},{"location":"components/Icon/#_5","text":"\u53ef\u4ee5\u5f15\u7528 ImageBitmap @Composable fun IconSample () { var bitmap : ImageBitmap ? = null with ( LocalContext . current ){ bitmap = ImageBitmap . imageResource ( resources , R . drawable . newbanner4 ) } bitmap ?. let { Icon ( bitmap = it , contentDescription = null ) } }","title":"\u7528\u6cd5\u4e09"},{"location":"components/Icon/#_6","text":"tint \u8bbe\u7f6e\u56fe\u6807\u989c\u8272 @Composable fun IconSample () { Icon ( imageVector = Icons . Default . Deck , contentDescription = null , tint = Color . Red ) }","title":"\u53c2\u6570"},{"location":"components/Image/","text":"\u5c5e\u6027 \u00b6 @Composable fun Image ( painter : Painter , contentDescription : String? , modifier : Modifier = Modifier , alignment : Alignment = Alignment . Center , contentScale : ContentScale = ContentScale . Fit , alpha : Float = DefaultAlpha , colorFilter : ColorFilter? = null ): Unit \u56fe\u7247\u8ddf Icon \u5dee\u4e0d\u591a\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e09\u79cd\u65b9\u5f0f\u5f15\u5165\u56fe\u7247\uff0c\u672c\u9875\u53ea\u5c55\u793a\u4e00\u79cd\u65b9\u5f0f \u53c2\u6570 \u00b6 contentScale \u8bbe\u7f6e\u56fe\u7247\u7684\u4f38\u5c55\u65b9\u5f0f\uff1aContentScale.Inside\u3001ContentScale.Crop \u7b49 colorFilter \u8bbe\u7f6e\u989c\u8272\u6ee4\u955c @Composable fun ImageSample () { Image ( painter = painterResource ( id = R . drawable . newbanner4 ), contentDescription = null , contentScale = ContentScale . Inside , colorFilter = ColorFilter . tint ( Color . Red , blendMode = BlendMode . Color ) ) }","title":"Image"},{"location":"components/Image/#_1","text":"@Composable fun Image ( painter : Painter , contentDescription : String? , modifier : Modifier = Modifier , alignment : Alignment = Alignment . Center , contentScale : ContentScale = ContentScale . Fit , alpha : Float = DefaultAlpha , colorFilter : ColorFilter? = null ): Unit \u56fe\u7247\u8ddf Icon \u5dee\u4e0d\u591a\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e09\u79cd\u65b9\u5f0f\u5f15\u5165\u56fe\u7247\uff0c\u672c\u9875\u53ea\u5c55\u793a\u4e00\u79cd\u65b9\u5f0f","title":"\u5c5e\u6027"},{"location":"components/Image/#_2","text":"contentScale \u8bbe\u7f6e\u56fe\u7247\u7684\u4f38\u5c55\u65b9\u5f0f\uff1aContentScale.Inside\u3001ContentScale.Crop \u7b49 colorFilter \u8bbe\u7f6e\u989c\u8272\u6ee4\u955c @Composable fun ImageSample () { Image ( painter = painterResource ( id = R . drawable . newbanner4 ), contentDescription = null , contentScale = ContentScale . Inside , colorFilter = ColorFilter . tint ( Color . Red , blendMode = BlendMode . Color ) ) }","title":"\u53c2\u6570"},{"location":"components/ProgressIndicator/","text":"","title":"ProgressIndicator"},{"location":"components/RadioButton/","text":"","title":"RadioButton"},{"location":"components/Slider/","text":"","title":"Slider"},{"location":"components/Spacer/","text":"","title":"Spacer"},{"location":"components/Switch/","text":"","title":"Switch"},{"location":"components/Text/","text":"Text \u6587\u672c\u663e\u793a\u63a7\u4ef6 \u00b6 @Composable fun Text ( text : String? , modifier : Modifier? = Modifier , color : Color? = Color . Unspecified , fontSize : TextUnit? = TextUnit . Unspecified , fontStyle : FontStyle? = null , fontWeight : FontWeight? = null , fontFamily : FontFamily? = null , letterSpacing : TextUnit? = TextUnit . Unspecified , textDecoration : TextDecoration? = null , textAlign : TextAlign? = null , lineHeight : TextUnit? = TextUnit . Unspecified , overflow : TextOverflow? = TextOverflow . Clip , softWrap : Boolean? = true , maxLines : Int? = Int . MAX_VALUE , onTextLayout : (( TextLayoutResult ) -> Unit ) ? = {}, style : TextStyle? = LocalTextStyle . current ): Unit \u7528\u6cd5 \u00b6 \u76f4\u63a5\u663e\u793a @Composable fun TextSample () { Text ( text = \"Hello World!\" ) } \u4ece res \u4e2d\u8bfb\u53d6\u6587\u5b57\u663e\u793a @Composable fun TextSample () { Text ( text = stringResource ( R . string . content )) } <resources> <string name= \"content\" > \u4f60\u597d\uff0c\u4e16\u754c! </string> </resources> \u53c2\u6570 \u00b6 color \u8bbe\u7f6e\u5b57\u4f53\u989c\u8272 \u00b6 @Composable fun TextSample () { Text ( text = \"Hello World!\" , color = Color . Red ) } fontSize \u8bbe\u7f6e\u6587\u5b57\u5927\u5c0f \u00b6 fontSize \u9ed8\u8ba4\u662f\u8ddf\u968f\u7236\u7ea7\u6587\u5b57\u5927\u5c0f\u3002 \u63a5\u6536\u7684\u662f\u4e00\u4e2a TextUnit\uff0c\u53ef\u4ee5\u8bbe\u7f6e SP(\u50cf\u7d20\u503c) \u548c EM(\u5b57\u4f53\u503c) \u5355\u4f4d\u7684\u503c \u4ee5\u4e0b\u793a\u4f8b\u662f\u76f4\u63a5\u4f7f\u7528 TextUnit \u521b\u5efa\u5bf9\u8c61\u8fdb\u884c\u8d4b\u503c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u8fd8\u662f\u5b9e\u9a8c\u6027\u7684\uff0c\u968f\u65f6\u90fd\u53ef\u80fd\u6709\u6539\u52a8\u6216\u5220\u9664\uff0c\u56e0\u6b64\u9700\u8981\u5728\u51fd\u6570\u524d\u589e\u52a0 @OptIn(ExperimentalUnitApi::class) \u6ce8\u89e3 @OptIn ( ExperimentalUnitApi :: class ) @Composable fun TextSample () { Text ( text = \"Hello World!\" , fontSize = TextUnit ( 16f , TextUnitType . Sp )) } \u5f53\u7136\uff0c\u7cfb\u7edf\u5bf9 Int \u3001 Double \u548c Float \u4e09\u79cd\u7c7b\u578b\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u53ef\u4ee5\u76f4\u63a5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u8fdb\u884c\u4f7f\u7528 import androidx.compose.ui.unit.sp import androidx.compose.ui.unit.em @Composable fun TextSample1 () { Text ( text = \"Hello World!\" , fontSize = 16.0 . sp )) } @OptIn ( ExperimentalUnitApi :: class ) @Composable fun TextSample2 () { Text ( text = \"Hello World!\" , fontSize = 16. em )) } \u4f7f\u7528 em \u7684\u6548\u679c fontStyle \u8bbe\u7f6e\u6587\u5b57\u6837\u5f0f \u00b6 FontStyle.Italic \u8bbe\u7f6e\u4e3a\u659c\u4f53 FontStyle.Normal \u8bbe\u7f6e\u4e3a\u6b63\u5e38\u4f53(\u9ed8\u8ba4\u72b6\u6001) @Composable fun TextSample () { Text ( text = \"Hello World!\" , fontStyle = FontStyle . Italic )) } fontWeight \u8bbe\u7f6e\u6587\u5b57\u6bd4\u91cd \u00b6 \u7cfb\u7edf\u9884\u8bbe\u4e86\u5f88\u591a\u6bd4\u91cd\u503c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u4f8b\u5982 FontWeight.Bold \uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 FontWeight(100) fontFamily \u8bbe\u7f6e\u6587\u5b57\u5b57\u4f53 \u00b6 \u540c\u6837\u7cfb\u7edf\u4e5f\u9884\u8bbe\u4e86\u51e0\u4e2a\u5b57\u4f53\u4f9b\u9009\u62e9\u4f7f\u7528\uff0c\u4f8b\u5982 FontFamily.SansSerif \u3002\u4e5f\u53ef\u4ee5\u52a0\u8f7dres \u4e0b\u7684\u5b57\u4f53\u6587\u4ef6 @Composable fun TextSample () { val firaSansFamily = FontFamily ( Font ( R . font . firasans_light , FontWeight . Light ), Font ( R . font . firasans_regular , FontWeight . Normal ), Font ( R . font . firasans_italic , FontWeight . Normal , FontStyle . Italic ), Font ( R . font . firasans_medium , FontWeight . Medium ), Font ( R . font . firasans_bold , FontWeight . Bold ) ) Text ( text = \"Hello World!\" , fontFamily = firaSansFamily )) } letterSpacing \u8bbe\u7f6e\u5b57\u7b26\u95f4\u8ddd \u00b6 @Composable fun TextSample () { Text ( text = \"Hello World!\" , letterSpacing = 15. sp )) } textDecoration \u8bbe\u7f6e\u6587\u5b57\u88c5\u9970 \u00b6 TextDecoration.None \u65e0\u88c5\u9970(\u9ed8\u8ba4) TextDecoration.Underline \u4e0b\u5212\u7ebf TextDecoration.LineThrough \u5220\u9664\u7ebf \u8fd8\u53ef\u4ee5\u901a\u8fc7 TextDecoration.combine() \u5408\u5e76\u4f7f\u7528\u591a\u79cd\u88c5\u9970 @Composable fun TextSample () { Text ( text = \"Hello World!\" , textDecoration = TextDecoration . combine ( listOf ( TextDecoration . LineThrough , TextDecoration . Underline ) ) ) } textAlign \u8bbe\u7f6e\u6587\u672c\u5bf9\u9f50\u65b9\u5f0f \u00b6 \u9700\u8981\u56fa\u5b9a\u5bbd\u5ea6\uff0c\u624d\u6709\u6548\u679c TextAlign.Center TextAlign.End TextAlign.Justify \u6548\u679c\u5982\u56fe lineHeight \u8bbe\u7f6e\u6587\u672c\u884c\u9ad8 \u00b6 @Composable fun TextSample () { Text ( text = \"Hello World!\" , lineHeight = 15. sp )) } overflow \u8bbe\u7f6e\u6587\u672c\u8d85\u51fa\u65f6\u5982\u4f55\u663e\u793a \u00b6 TextOverflow.Ellipsis \u4ee5\u7701\u7565\u53f7\u663e\u793a TextOverflow.Clip \u88c1\u526a TextOverflow.Visible \u5c3d\u53ef\u80fd\u663e\u793a Tip \u76ee\u524d\u7701\u7565\u53f7\u53ea\u80fd\u5728\u672b\u5c3e\uff0c\u65e0\u6cd5\u81ea\u5b9a\u4e49\u7701\u7565\u53f7\u4f4d\u7f6e maxLines \u6587\u672c\u663e\u793a\u884c\u6570 \u00b6 @Composable fun TextSample () { Text ( text = \"Hello World!\" , maxLines = 1 )) } style \u6837\u5f0f \u00b6 \u4e0a\u9762\u8bb2\u5230\u7684\u5927\u90e8\u5206\u6587\u5b57\u4fee\u9970\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 TextStyle \u8fdb\u884c\u4fee\u9970\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u591a\u51fa\u51e0\u4e2a\u6837\u5f0f fontFeatureSettings \u5b57\u4f53\u7684\u9ad8\u7ea7\u8bbe\u7f6e\uff0c\u7c7b\u4f3c CSS\u7684 font-feature-settings \uff0c\u53ef\u4ee5\u53c2\u8003 https://www.w3.org/TR/css-fonts-3/#font-feature-settings-prop background \u8bbe\u7f6e\u80cc\u666f\u989c\u8272 shadow \u8bbe\u7f6e\u9634\u5f71 textIndent \u8bbe\u7f6e\u9996\u5148\u7f29\u8fdb @Composable fun TextSample () { Text ( text = \"\u9504\u79be\u65e5\u5f53\u5348\uff0c\u6c57\u6ef4\u79be\u4e0b\u571f\u3002\u8c01\u77e5\u76d8\u4e2d\u9910\uff0c\u7c92\u7c92\u7686\u8f9b\u82e6\" , modifier = Modifier . width ( 110. dp ), style = TextStyle ( background = Color . White , shadow = Shadow ( color = Color . Red , offset = Offset ( 5f , 5f ), blurRadius = 10f ), textIndent = TextIndent ( 20. sp ) ) ) } SelectionContainer \u6587\u5b57\u590d\u5236 \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b Text \u5e76\u4e0d\u80fd\u8fdb\u884c\u590d\u5236\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e SelectionContainer \u6765\u5305\u88c5 Text @Composable fun TextSample () { SelectionContainer ( Text ( text = \"\u9504\u79be\u65e5\u5f53\u5348\uff0c\u6c57\u6ef4\u79be\u4e0b\u571f\u3002\u8c01\u77e5\u76d8\u4e2d\u9910\uff0c\u7c92\u7c92\u7686\u8f9b\u82e6\" ) ) } Text \u8bed\u53e5\u4e2d\u8bbe\u7f6e\u4e0d\u540c\u6837\u5f0f \u00b6 \u5982\u679c\u60f3\u8ba9\u4e00\u4e2a Text \u8bed\u53e5\u4e2d\u6709\u4e0d\u540c\u7684\u6837\u5f0f\uff0c\u9700\u8981\u4f7f\u7528\u5230 AnnotaedString AnnotaedString \u662f\u4e00\u4e2a\u6570\u636e\u7c7b\uff0c\u5305\u542b\u6587\u672c\uff0c\u4ee5\u53ca\u591a\u79cd\u6837\u5f0f @Composable fun TextSample () { Text ( buildAnnotatedString { withStyle ( style = SpanStyle ( Color . Red )) { append ( \"\u9504\u79be\u65e5\u5f53\u5348\uff0c\" ) } withStyle ( style = SpanStyle ( Color . Green )) { append ( \"\u6c57\u6ef4\u79be\u4e0b\u571f\u3002\" ) } withStyle ( style = SpanStyle ( Color . Blue )) { append ( \"\u8c01\u77e5\u76d8\u4e2d\u9910\uff0c\" ) } withStyle ( style = SpanStyle ( Color . Yellow )) { append ( \"\u7c92\u7c92\u7686\u8f9b\u82e6\" ) } } ) } ClickableText \u6587\u672c\u70b9\u51fb\u63a7\u4ef6 \u00b6 \u60f3\u8981\u8ba9\u6587\u672c\u53ef\u4ee5\u63a5\u6536\u5230\u70b9\u51fb\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528 ClickableText \uff0c\u63a7\u4ef6\u5e26\u6709\u4e00\u4e2a onClick \u53c2\u6570\uff0c\u53c2\u6570\u56de\u8c03\u4e2d\u8fd8\u53ef\u4ee5\u77e5\u9053\u5f53\u524d\u70b9\u51fb\u5b57\u6761\u7684 offset \u662f\u591a\u5c11 \u7b80\u5355\u7528\u6cd5 \u00b6 @Composable fun TextSample () { Text ( buildAnnotatedString { withStyle ( style = SpanStyle ( Color . Red )) { append ( \"\u9504\u79be\u65e5\u5f53\u5348\uff0c\" ) } withStyle ( style = SpanStyle ( Color . Green )) { append ( \"\u6c57\u6ef4\u79be\u4e0b\u571f\u3002\" ) } withStyle ( style = SpanStyle ( Color . Blue )) { append ( \"\u8c01\u77e5\u76d8\u4e2d\u9910\uff0c\" ) } withStyle ( style = SpanStyle ( Color . Yellow )) { append ( \"\u7c92\u7c92\u7686\u8f9b\u82e6\" ) } }, onClick = { offset -> Log . d ( \"TextSample\" , \"offset: $ offset \" ) } ) } \u9ad8\u7ea7\u7528\u6cd5 \u00b6 \u4ece\u4e0a\u9762 \u8bbe\u7f6e\u4e0d\u540c\u6837\u5f0f \u548c \u6587\u672c\u70b9\u51fb \u6211\u4eec\u77e5\u9053\u4e86\u5982\u4f55\u5728 Text \u8bed\u53e5\u5185\u8bbe\u7f6e\u4e0d\u540c\u7684\u6837\u5f0f\uff0c\u4e5f\u77e5\u9053\u4e86\u5982\u4f55\u83b7\u5f97\u70b9\u51fb\u7684\u6587\u5b57\uff0c\u90a3\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u5b9e\u73b0\u5728\u6587\u672c\u5185\u8bbe\u7f6e\u90e8\u5206\u6587\u5b57\u53ef\u4ee5\u70b9\u51fb\u5462\uff01 \u6bd4\u5982\u300e\u70b9\u51fb\u767b\u5f55\u4ee3\u8868\u60a8\u77e5\u6089\u548c \u7528\u6237\u534f\u8bae \u548c \u9690\u79c1\u653f\u7b56 \u300f @Composable fun TextSample () { val annotatedString = buildAnnotatedString { append ( \"\u70b9\u51fb\u767b\u5f55\u4ee3\u8868\u60a8\u77e5\u6089\u548c\u540c\u610f\" ) //\u5f80\u5b57\u7b26\u4e32\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6ce8\u89e3\uff0c\u76f4\u5230\u9047\u5230 pop() \u3002tag \u4e3a\u6ce8\u89e3\u6807\u8bc6\uff0cannotation \u4e3a\u4f20\u9012\u5185\u5bb9 pushStringAnnotation ( \"protocol\" , annotation = \"https://docs.bughub.icu/compose\" ) withStyle ( style = SpanStyle ( Color . Blue )) { append ( \"\u7528\u6237\u534f\u8bae\" ) } pop () append ( \"\u548c\" ) pushStringAnnotation ( \"privacy\" , annotation = \"https://randywei.gitee.com\" ) withStyle ( style = SpanStyle ( Color . Blue )) { append ( \"\u9690\u79c1\u653f\u7b56\" ) } pop () } ClickableText ( annotatedString , onClick = { offset -> //\u4ece\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u6ce8\u89e3 annotatedString . getStringAnnotations ( \"protocol\" , start = offset , end = offset ) . firstOrNull () ?. let { annotation -> Log . d ( \"TextSample\" , \"\u70b9\u51fb\u4e86\u7528\u6237\u534f\u8bae\uff1a ${ annotation . item } \" ) } annotatedString . getStringAnnotations ( \"privacy\" , start = offset , end = offset ) . firstOrNull () ?. let { annotation -> Log . d ( \"TextSample\" , \"\u70b9\u51fb\u4e86\u9690\u79c1\u653f\u7b56\uff1a ${ annotation . item } \" ) } } ) } \u66f4\u591a \u00b6 \u5b98\u65b9\u6587\u6863 Text \u7528\u6cd5","title":"Text"},{"location":"components/Text/#text","text":"@Composable fun Text ( text : String? , modifier : Modifier? = Modifier , color : Color? = Color . Unspecified , fontSize : TextUnit? = TextUnit . Unspecified , fontStyle : FontStyle? = null , fontWeight : FontWeight? = null , fontFamily : FontFamily? = null , letterSpacing : TextUnit? = TextUnit . Unspecified , textDecoration : TextDecoration? = null , textAlign : TextAlign? = null , lineHeight : TextUnit? = TextUnit . Unspecified , overflow : TextOverflow? = TextOverflow . Clip , softWrap : Boolean? = true , maxLines : Int? = Int . MAX_VALUE , onTextLayout : (( TextLayoutResult ) -> Unit ) ? = {}, style : TextStyle? = LocalTextStyle . current ): Unit","title":"Text \u6587\u672c\u663e\u793a\u63a7\u4ef6"},{"location":"components/Text/#_1","text":"\u76f4\u63a5\u663e\u793a @Composable fun TextSample () { Text ( text = \"Hello World!\" ) } \u4ece res \u4e2d\u8bfb\u53d6\u6587\u5b57\u663e\u793a @Composable fun TextSample () { Text ( text = stringResource ( R . string . content )) } <resources> <string name= \"content\" > \u4f60\u597d\uff0c\u4e16\u754c! </string> </resources>","title":"\u7528\u6cd5"},{"location":"components/Text/#_2","text":"","title":"\u53c2\u6570"},{"location":"components/Text/#color","text":"@Composable fun TextSample () { Text ( text = \"Hello World!\" , color = Color . Red ) }","title":"color \u8bbe\u7f6e\u5b57\u4f53\u989c\u8272"},{"location":"components/Text/#fontsize","text":"fontSize \u9ed8\u8ba4\u662f\u8ddf\u968f\u7236\u7ea7\u6587\u5b57\u5927\u5c0f\u3002 \u63a5\u6536\u7684\u662f\u4e00\u4e2a TextUnit\uff0c\u53ef\u4ee5\u8bbe\u7f6e SP(\u50cf\u7d20\u503c) \u548c EM(\u5b57\u4f53\u503c) \u5355\u4f4d\u7684\u503c \u4ee5\u4e0b\u793a\u4f8b\u662f\u76f4\u63a5\u4f7f\u7528 TextUnit \u521b\u5efa\u5bf9\u8c61\u8fdb\u884c\u8d4b\u503c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u8fd8\u662f\u5b9e\u9a8c\u6027\u7684\uff0c\u968f\u65f6\u90fd\u53ef\u80fd\u6709\u6539\u52a8\u6216\u5220\u9664\uff0c\u56e0\u6b64\u9700\u8981\u5728\u51fd\u6570\u524d\u589e\u52a0 @OptIn(ExperimentalUnitApi::class) \u6ce8\u89e3 @OptIn ( ExperimentalUnitApi :: class ) @Composable fun TextSample () { Text ( text = \"Hello World!\" , fontSize = TextUnit ( 16f , TextUnitType . Sp )) } \u5f53\u7136\uff0c\u7cfb\u7edf\u5bf9 Int \u3001 Double \u548c Float \u4e09\u79cd\u7c7b\u578b\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u53ef\u4ee5\u76f4\u63a5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u8fdb\u884c\u4f7f\u7528 import androidx.compose.ui.unit.sp import androidx.compose.ui.unit.em @Composable fun TextSample1 () { Text ( text = \"Hello World!\" , fontSize = 16.0 . sp )) } @OptIn ( ExperimentalUnitApi :: class ) @Composable fun TextSample2 () { Text ( text = \"Hello World!\" , fontSize = 16. em )) } \u4f7f\u7528 em \u7684\u6548\u679c","title":"fontSize \u8bbe\u7f6e\u6587\u5b57\u5927\u5c0f"},{"location":"components/Text/#fontstyle","text":"FontStyle.Italic \u8bbe\u7f6e\u4e3a\u659c\u4f53 FontStyle.Normal \u8bbe\u7f6e\u4e3a\u6b63\u5e38\u4f53(\u9ed8\u8ba4\u72b6\u6001) @Composable fun TextSample () { Text ( text = \"Hello World!\" , fontStyle = FontStyle . Italic )) }","title":"fontStyle \u8bbe\u7f6e\u6587\u5b57\u6837\u5f0f"},{"location":"components/Text/#fontweight","text":"\u7cfb\u7edf\u9884\u8bbe\u4e86\u5f88\u591a\u6bd4\u91cd\u503c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u4f8b\u5982 FontWeight.Bold \uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 FontWeight(100)","title":"fontWeight \u8bbe\u7f6e\u6587\u5b57\u6bd4\u91cd"},{"location":"components/Text/#fontfamily","text":"\u540c\u6837\u7cfb\u7edf\u4e5f\u9884\u8bbe\u4e86\u51e0\u4e2a\u5b57\u4f53\u4f9b\u9009\u62e9\u4f7f\u7528\uff0c\u4f8b\u5982 FontFamily.SansSerif \u3002\u4e5f\u53ef\u4ee5\u52a0\u8f7dres \u4e0b\u7684\u5b57\u4f53\u6587\u4ef6 @Composable fun TextSample () { val firaSansFamily = FontFamily ( Font ( R . font . firasans_light , FontWeight . Light ), Font ( R . font . firasans_regular , FontWeight . Normal ), Font ( R . font . firasans_italic , FontWeight . Normal , FontStyle . Italic ), Font ( R . font . firasans_medium , FontWeight . Medium ), Font ( R . font . firasans_bold , FontWeight . Bold ) ) Text ( text = \"Hello World!\" , fontFamily = firaSansFamily )) }","title":"fontFamily \u8bbe\u7f6e\u6587\u5b57\u5b57\u4f53"},{"location":"components/Text/#letterspacing","text":"@Composable fun TextSample () { Text ( text = \"Hello World!\" , letterSpacing = 15. sp )) }","title":"letterSpacing \u8bbe\u7f6e\u5b57\u7b26\u95f4\u8ddd"},{"location":"components/Text/#textdecoration","text":"TextDecoration.None \u65e0\u88c5\u9970(\u9ed8\u8ba4) TextDecoration.Underline \u4e0b\u5212\u7ebf TextDecoration.LineThrough \u5220\u9664\u7ebf \u8fd8\u53ef\u4ee5\u901a\u8fc7 TextDecoration.combine() \u5408\u5e76\u4f7f\u7528\u591a\u79cd\u88c5\u9970 @Composable fun TextSample () { Text ( text = \"Hello World!\" , textDecoration = TextDecoration . combine ( listOf ( TextDecoration . LineThrough , TextDecoration . Underline ) ) ) }","title":"textDecoration \u8bbe\u7f6e\u6587\u5b57\u88c5\u9970"},{"location":"components/Text/#textalign","text":"\u9700\u8981\u56fa\u5b9a\u5bbd\u5ea6\uff0c\u624d\u6709\u6548\u679c TextAlign.Center TextAlign.End TextAlign.Justify \u6548\u679c\u5982\u56fe","title":"textAlign \u8bbe\u7f6e\u6587\u672c\u5bf9\u9f50\u65b9\u5f0f"},{"location":"components/Text/#lineheight","text":"@Composable fun TextSample () { Text ( text = \"Hello World!\" , lineHeight = 15. sp )) }","title":"lineHeight \u8bbe\u7f6e\u6587\u672c\u884c\u9ad8"},{"location":"components/Text/#overflow","text":"TextOverflow.Ellipsis \u4ee5\u7701\u7565\u53f7\u663e\u793a TextOverflow.Clip \u88c1\u526a TextOverflow.Visible \u5c3d\u53ef\u80fd\u663e\u793a Tip \u76ee\u524d\u7701\u7565\u53f7\u53ea\u80fd\u5728\u672b\u5c3e\uff0c\u65e0\u6cd5\u81ea\u5b9a\u4e49\u7701\u7565\u53f7\u4f4d\u7f6e","title":"overflow \u8bbe\u7f6e\u6587\u672c\u8d85\u51fa\u65f6\u5982\u4f55\u663e\u793a"},{"location":"components/Text/#maxlines","text":"@Composable fun TextSample () { Text ( text = \"Hello World!\" , maxLines = 1 )) }","title":"maxLines \u6587\u672c\u663e\u793a\u884c\u6570"},{"location":"components/Text/#style","text":"\u4e0a\u9762\u8bb2\u5230\u7684\u5927\u90e8\u5206\u6587\u5b57\u4fee\u9970\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 TextStyle \u8fdb\u884c\u4fee\u9970\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u591a\u51fa\u51e0\u4e2a\u6837\u5f0f fontFeatureSettings \u5b57\u4f53\u7684\u9ad8\u7ea7\u8bbe\u7f6e\uff0c\u7c7b\u4f3c CSS\u7684 font-feature-settings \uff0c\u53ef\u4ee5\u53c2\u8003 https://www.w3.org/TR/css-fonts-3/#font-feature-settings-prop background \u8bbe\u7f6e\u80cc\u666f\u989c\u8272 shadow \u8bbe\u7f6e\u9634\u5f71 textIndent \u8bbe\u7f6e\u9996\u5148\u7f29\u8fdb @Composable fun TextSample () { Text ( text = \"\u9504\u79be\u65e5\u5f53\u5348\uff0c\u6c57\u6ef4\u79be\u4e0b\u571f\u3002\u8c01\u77e5\u76d8\u4e2d\u9910\uff0c\u7c92\u7c92\u7686\u8f9b\u82e6\" , modifier = Modifier . width ( 110. dp ), style = TextStyle ( background = Color . White , shadow = Shadow ( color = Color . Red , offset = Offset ( 5f , 5f ), blurRadius = 10f ), textIndent = TextIndent ( 20. sp ) ) ) }","title":"style \u6837\u5f0f"},{"location":"components/Text/#selectioncontainer","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b Text \u5e76\u4e0d\u80fd\u8fdb\u884c\u590d\u5236\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e SelectionContainer \u6765\u5305\u88c5 Text @Composable fun TextSample () { SelectionContainer ( Text ( text = \"\u9504\u79be\u65e5\u5f53\u5348\uff0c\u6c57\u6ef4\u79be\u4e0b\u571f\u3002\u8c01\u77e5\u76d8\u4e2d\u9910\uff0c\u7c92\u7c92\u7686\u8f9b\u82e6\" ) ) }","title":"SelectionContainer \u6587\u5b57\u590d\u5236"},{"location":"components/Text/#text_1","text":"\u5982\u679c\u60f3\u8ba9\u4e00\u4e2a Text \u8bed\u53e5\u4e2d\u6709\u4e0d\u540c\u7684\u6837\u5f0f\uff0c\u9700\u8981\u4f7f\u7528\u5230 AnnotaedString AnnotaedString \u662f\u4e00\u4e2a\u6570\u636e\u7c7b\uff0c\u5305\u542b\u6587\u672c\uff0c\u4ee5\u53ca\u591a\u79cd\u6837\u5f0f @Composable fun TextSample () { Text ( buildAnnotatedString { withStyle ( style = SpanStyle ( Color . Red )) { append ( \"\u9504\u79be\u65e5\u5f53\u5348\uff0c\" ) } withStyle ( style = SpanStyle ( Color . Green )) { append ( \"\u6c57\u6ef4\u79be\u4e0b\u571f\u3002\" ) } withStyle ( style = SpanStyle ( Color . Blue )) { append ( \"\u8c01\u77e5\u76d8\u4e2d\u9910\uff0c\" ) } withStyle ( style = SpanStyle ( Color . Yellow )) { append ( \"\u7c92\u7c92\u7686\u8f9b\u82e6\" ) } } ) }","title":"Text \u8bed\u53e5\u4e2d\u8bbe\u7f6e\u4e0d\u540c\u6837\u5f0f"},{"location":"components/Text/#clickabletext","text":"\u60f3\u8981\u8ba9\u6587\u672c\u53ef\u4ee5\u63a5\u6536\u5230\u70b9\u51fb\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528 ClickableText \uff0c\u63a7\u4ef6\u5e26\u6709\u4e00\u4e2a onClick \u53c2\u6570\uff0c\u53c2\u6570\u56de\u8c03\u4e2d\u8fd8\u53ef\u4ee5\u77e5\u9053\u5f53\u524d\u70b9\u51fb\u5b57\u6761\u7684 offset \u662f\u591a\u5c11","title":"ClickableText\u6587\u672c\u70b9\u51fb\u63a7\u4ef6"},{"location":"components/Text/#_3","text":"@Composable fun TextSample () { Text ( buildAnnotatedString { withStyle ( style = SpanStyle ( Color . Red )) { append ( \"\u9504\u79be\u65e5\u5f53\u5348\uff0c\" ) } withStyle ( style = SpanStyle ( Color . Green )) { append ( \"\u6c57\u6ef4\u79be\u4e0b\u571f\u3002\" ) } withStyle ( style = SpanStyle ( Color . Blue )) { append ( \"\u8c01\u77e5\u76d8\u4e2d\u9910\uff0c\" ) } withStyle ( style = SpanStyle ( Color . Yellow )) { append ( \"\u7c92\u7c92\u7686\u8f9b\u82e6\" ) } }, onClick = { offset -> Log . d ( \"TextSample\" , \"offset: $ offset \" ) } ) }","title":"\u7b80\u5355\u7528\u6cd5"},{"location":"components/Text/#_4","text":"\u4ece\u4e0a\u9762 \u8bbe\u7f6e\u4e0d\u540c\u6837\u5f0f \u548c \u6587\u672c\u70b9\u51fb \u6211\u4eec\u77e5\u9053\u4e86\u5982\u4f55\u5728 Text \u8bed\u53e5\u5185\u8bbe\u7f6e\u4e0d\u540c\u7684\u6837\u5f0f\uff0c\u4e5f\u77e5\u9053\u4e86\u5982\u4f55\u83b7\u5f97\u70b9\u51fb\u7684\u6587\u5b57\uff0c\u90a3\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u5b9e\u73b0\u5728\u6587\u672c\u5185\u8bbe\u7f6e\u90e8\u5206\u6587\u5b57\u53ef\u4ee5\u70b9\u51fb\u5462\uff01 \u6bd4\u5982\u300e\u70b9\u51fb\u767b\u5f55\u4ee3\u8868\u60a8\u77e5\u6089\u548c \u7528\u6237\u534f\u8bae \u548c \u9690\u79c1\u653f\u7b56 \u300f @Composable fun TextSample () { val annotatedString = buildAnnotatedString { append ( \"\u70b9\u51fb\u767b\u5f55\u4ee3\u8868\u60a8\u77e5\u6089\u548c\u540c\u610f\" ) //\u5f80\u5b57\u7b26\u4e32\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6ce8\u89e3\uff0c\u76f4\u5230\u9047\u5230 pop() \u3002tag \u4e3a\u6ce8\u89e3\u6807\u8bc6\uff0cannotation \u4e3a\u4f20\u9012\u5185\u5bb9 pushStringAnnotation ( \"protocol\" , annotation = \"https://docs.bughub.icu/compose\" ) withStyle ( style = SpanStyle ( Color . Blue )) { append ( \"\u7528\u6237\u534f\u8bae\" ) } pop () append ( \"\u548c\" ) pushStringAnnotation ( \"privacy\" , annotation = \"https://randywei.gitee.com\" ) withStyle ( style = SpanStyle ( Color . Blue )) { append ( \"\u9690\u79c1\u653f\u7b56\" ) } pop () } ClickableText ( annotatedString , onClick = { offset -> //\u4ece\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u6ce8\u89e3 annotatedString . getStringAnnotations ( \"protocol\" , start = offset , end = offset ) . firstOrNull () ?. let { annotation -> Log . d ( \"TextSample\" , \"\u70b9\u51fb\u4e86\u7528\u6237\u534f\u8bae\uff1a ${ annotation . item } \" ) } annotatedString . getStringAnnotations ( \"privacy\" , start = offset , end = offset ) . firstOrNull () ?. let { annotation -> Log . d ( \"TextSample\" , \"\u70b9\u51fb\u4e86\u9690\u79c1\u653f\u7b56\uff1a ${ annotation . item } \" ) } } ) }","title":"\u9ad8\u7ea7\u7528\u6cd5"},{"location":"components/Text/#_5","text":"\u5b98\u65b9\u6587\u6863 Text \u7528\u6cd5","title":"\u66f4\u591a"},{"location":"components/TextField/","text":"","title":"TextField"},{"location":"environment/macOS/","text":"\u7f51\u7edc\u6761\u4ef6 \u00b6 \u5728\u5b66\u4e60 Jetpack Compose \u4e4b\u524d\uff0c\u5efa\u8bae\u6700\u597d\u51c6\u5907\u68af\u5b50\uff0c\u56e0\u4e3a\u9996\u5148\u7b2c\u4e00\u6b65\u4e0b\u8f7dAndroid Studio \u5c31\u9700\u8981\u722c\u68af\u5b50\uff0c\u5305\u62ec\u540e\u7eed\u7684\u67e5\u770b\u5b98\u65b9\u6587\u6863\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u662f\u9700\u8981\u68af\u5b50\u7684\u3002 \u5f53\u7136\u6ca1\u6709\u7684\u60c5\u51b5\u4e0b\u4e5f\u4e0d\u662f\u4e0d\u80fd\u5b66\u4e60\u3002 \u4e0b\u8f7d Android Studio \u00b6 \u5b98\u65b9\u4e0b\u8f7d\u5730\u5740 \u70b9\u51fb\u4e0a\u9762\u7684\u5730\u5740\u76f4\u8fbe\u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\uff0c\u5982\u679c\u7535\u8111\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 Android Studio\uff0c\u4e00\u5b9a\u8981\u786e\u5b9a\u7248\u672c\u662f Arctic Fox | 2020.3.1 \u4e4b\u540e\u7684\u7248\u672c\uff08\u5305\u542b\uff09\u3002 \u70b9\u51fb Download Android Sudio \u52fe\u9009\u540c\u610f\u534f\u8bae\uff0c \u6839\u636e\u81ea\u5df1\u7684\u7535\u8111 CPU \u578b\u53f7\u8fdb\u884c\u9009\u62e9\u4e0b\u8f7d \u5b89\u88c5 Android Studio \u00b6 \u53cc\u51fb dmg \u955c\u50cf\u6587\u4ef6\u540e\u62d6\u52a8Android Studio.app \u653e\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5373\u53ef \u914d\u7f6e \u00b6","title":"MacOS \u73af\u5883\u642d\u5efa"},{"location":"environment/macOS/#_1","text":"\u5728\u5b66\u4e60 Jetpack Compose \u4e4b\u524d\uff0c\u5efa\u8bae\u6700\u597d\u51c6\u5907\u68af\u5b50\uff0c\u56e0\u4e3a\u9996\u5148\u7b2c\u4e00\u6b65\u4e0b\u8f7dAndroid Studio \u5c31\u9700\u8981\u722c\u68af\u5b50\uff0c\u5305\u62ec\u540e\u7eed\u7684\u67e5\u770b\u5b98\u65b9\u6587\u6863\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u662f\u9700\u8981\u68af\u5b50\u7684\u3002 \u5f53\u7136\u6ca1\u6709\u7684\u60c5\u51b5\u4e0b\u4e5f\u4e0d\u662f\u4e0d\u80fd\u5b66\u4e60\u3002","title":"\u7f51\u7edc\u6761\u4ef6"},{"location":"environment/macOS/#android-studio","text":"\u5b98\u65b9\u4e0b\u8f7d\u5730\u5740 \u70b9\u51fb\u4e0a\u9762\u7684\u5730\u5740\u76f4\u8fbe\u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\uff0c\u5982\u679c\u7535\u8111\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 Android Studio\uff0c\u4e00\u5b9a\u8981\u786e\u5b9a\u7248\u672c\u662f Arctic Fox | 2020.3.1 \u4e4b\u540e\u7684\u7248\u672c\uff08\u5305\u542b\uff09\u3002 \u70b9\u51fb Download Android Sudio \u52fe\u9009\u540c\u610f\u534f\u8bae\uff0c \u6839\u636e\u81ea\u5df1\u7684\u7535\u8111 CPU \u578b\u53f7\u8fdb\u884c\u9009\u62e9\u4e0b\u8f7d","title":"\u4e0b\u8f7d Android Studio"},{"location":"environment/macOS/#android-studio_1","text":"\u53cc\u51fb dmg \u955c\u50cf\u6587\u4ef6\u540e\u62d6\u52a8Android Studio.app \u653e\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5373\u53ef","title":"\u5b89\u88c5 Android Studio"},{"location":"environment/macOS/#_2","text":"","title":"\u914d\u7f6e"},{"location":"environment/windows/","text":"\u7f51\u7edc\u6761\u4ef6 \u00b6 \u5728\u5b66\u4e60 Jetpack Compose \u4e4b\u524d\uff0c\u5efa\u8bae\u6700\u597d\u51c6\u5907\u68af\u5b50\uff0c\u56e0\u4e3a\u9996\u5148\u7b2c\u4e00\u6b65\u4e0b\u8f7dAndroid Studio \u5c31\u9700\u8981\u722c\u68af\u5b50\uff0c\u5305\u62ec\u540e\u7eed\u7684\u67e5\u770b\u5b98\u65b9\u6587\u6863\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u662f\u9700\u8981\u68af\u5b50\u7684\u3002 \u5f53\u7136\u6ca1\u6709\u7684\u60c5\u51b5\u4e0b\u4e5f\u4e0d\u662f\u4e0d\u80fd\u5b66\u4e60\u3002 \u4e0b\u8f7d Android Studio \u00b6 \u5b98\u65b9\u4e0b\u8f7d\u5730\u5740 \u70b9\u51fb\u4e0a\u9762\u7684\u5730\u5740\u76f4\u8fbe\u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\uff0c\u5982\u679c\u7535\u8111\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 Android Studio\uff0c\u4e00\u5b9a\u8981\u786e\u5b9a\u7248\u672c\u662f Arctic Fox | 2020.3.1 \u4e4b\u540e\u7684\u7248\u672c\uff08\u5305\u542b\uff09\u3002 \u70b9\u51fb Download Android Sudio \u52fe\u9009\u540c\u610f\u534f\u8bae\uff0c\u70b9\u51fb Download Android Studio for Windows \u5b89\u88c5 Android Studio \u00b6 \u53cc\u51fb\u4e0b\u8f7d\u597d\u7684 exe \u6587\u4ef6\uff0c\u6309\u7167\u6b65\u9aa4\u9009\u62e9\u5b89\u88c5\u76ee\u5f55\u8fdb\u884c\u5b89\u88c5 \u914d\u7f6e \u00b6","title":"Windows \u73af\u5883\u642d\u5efa"},{"location":"environment/windows/#_1","text":"\u5728\u5b66\u4e60 Jetpack Compose \u4e4b\u524d\uff0c\u5efa\u8bae\u6700\u597d\u51c6\u5907\u68af\u5b50\uff0c\u56e0\u4e3a\u9996\u5148\u7b2c\u4e00\u6b65\u4e0b\u8f7dAndroid Studio \u5c31\u9700\u8981\u722c\u68af\u5b50\uff0c\u5305\u62ec\u540e\u7eed\u7684\u67e5\u770b\u5b98\u65b9\u6587\u6863\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u662f\u9700\u8981\u68af\u5b50\u7684\u3002 \u5f53\u7136\u6ca1\u6709\u7684\u60c5\u51b5\u4e0b\u4e5f\u4e0d\u662f\u4e0d\u80fd\u5b66\u4e60\u3002","title":"\u7f51\u7edc\u6761\u4ef6"},{"location":"environment/windows/#android-studio","text":"\u5b98\u65b9\u4e0b\u8f7d\u5730\u5740 \u70b9\u51fb\u4e0a\u9762\u7684\u5730\u5740\u76f4\u8fbe\u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\uff0c\u5982\u679c\u7535\u8111\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 Android Studio\uff0c\u4e00\u5b9a\u8981\u786e\u5b9a\u7248\u672c\u662f Arctic Fox | 2020.3.1 \u4e4b\u540e\u7684\u7248\u672c\uff08\u5305\u542b\uff09\u3002 \u70b9\u51fb Download Android Sudio \u52fe\u9009\u540c\u610f\u534f\u8bae\uff0c\u70b9\u51fb Download Android Studio for Windows","title":"\u4e0b\u8f7d Android Studio"},{"location":"environment/windows/#android-studio_1","text":"\u53cc\u51fb\u4e0b\u8f7d\u597d\u7684 exe \u6587\u4ef6\uff0c\u6309\u7167\u6b65\u9aa4\u9009\u62e9\u5b89\u88c5\u76ee\u5f55\u8fdb\u884c\u5b89\u88c5","title":"\u5b89\u88c5 Android Studio"},{"location":"environment/windows/#_2","text":"","title":"\u914d\u7f6e"},{"location":"layout/Box/","text":"","title":"Box"},{"location":"layout/Canvas/","text":"","title":"Canvas"},{"location":"layout/Card/","text":"","title":"Card"},{"location":"layout/Column/","text":"","title":"Column"},{"location":"layout/ComposeView/","text":"","title":"ComposeView"},{"location":"layout/ConstraintLayout/","text":"","title":"ConstraintLayout"},{"location":"layout/Dialog/","text":"","title":"Dialog"},{"location":"layout/DropdownMenu/","text":"","title":"DropdownMenu"},{"location":"layout/LazyColumn/","text":"","title":"LazyColumn"},{"location":"layout/LazyRow/","text":"","title":"LazyRow"},{"location":"layout/LazyVerticalGrid/","text":"","title":"LazyVerticalGrid"},{"location":"layout/ListItem/","text":"","title":"ListItem"},{"location":"layout/Row/","text":"","title":"Row"},{"location":"layout/Scaffold/","text":"","title":"Scaffold"},{"location":"layout/Surface/","text":"","title":"Surface"},{"location":"layout/SwipeToDismiss/","text":"","title":"SwipeToDismiss"},{"location":"layout/TabRow/","text":"","title":"TabRow"}]}